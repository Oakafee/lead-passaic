Last login: Tue Nov 30 08:34:16 on ttys000
Oakafee@Jesses-MacBook-Air project % source ../geo_env/bin/activate
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info['mcl'] = lead_info['Lead in mg/L'] > 0.015
>>> lead_violations = lead_info.groupby(by='Muncode').sum()
>>> lead_violations
         Lead in mg/L  mcl
Muncode                   
 2004        0.064000    0
0201         0.099760    0
0211         0.030580    0
0217         0.050860    0
0220         0.136400    0
...               ...  ...
1614         0.046464    0
1616         0.000000    0
1911         0.031180    0
1918         0.130920    2
HILLS        0.247840    0

[73 rows x 2 columns]
>>> lead_violations[lead_violations.mcl > 0]
         Lead in mg/L  mcl
Muncode                   
0223         0.324380    4
0232         0.136080    2
0233         0.535780   12
0251         0.178240    4
0257         0.169840    2
0701         0.720140   20
0702         0.346640    8
0704         0.077410    2
0708         0.185172    4
0714         0.574200   12
0718         0.340720    2
0720         0.119600    2
1404         0.053620    2
1415         0.196220    2
1416         0.224480    2
1605         0.868860   18
1918         0.130920    2
>>> lead_violations[lead_violations.Muncode == '0233']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'Muncode'
>>> lead_violations[lead_violations.index == '0233']
         Lead in mg/L  mcl
Muncode                   
0233          0.53578   12
>>> lead_info[lead_info.index == '0233']
Empty DataFrame
Columns: [City, County, Lead in mg/L, Muncode, PWSID, Water system name, date, mcl]
Index: []
>>> lead_info[lead_info.Muncode == '0233']
            City  County  Lead in mg/L Muncode      PWSID        Water system name       date    mcl
1550  MAHWAH TWP  BERGEN       0.01500    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2004-01-01  False
1551  MAHWAH TWP  BERGEN       0.01500    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2004-12-31  False
1552  MAHWAH TWP  BERGEN       0.04050    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2005-01-01   True
1553  MAHWAH TWP  BERGEN       0.04050    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2005-12-31   True
1554  MAHWAH TWP  BERGEN       0.00800    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-01-01  False
1555  MAHWAH TWP  BERGEN       0.00800    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-06-30  False
1556  MAHWAH TWP  BERGEN       0.02300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-07-01   True
1557  MAHWAH TWP  BERGEN       0.02300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-12-31   True
1558  MAHWAH TWP  BERGEN       0.01300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2007-01-01  False
1559  MAHWAH TWP  BERGEN       0.01300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2007-06-30  False
1560  MAHWAH TWP  BERGEN       0.01300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2007-07-01  False
1561  MAHWAH TWP  BERGEN       0.01300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2007-12-31  False
1562  MAHWAH TWP  BERGEN       0.01600    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-01-01   True
1563  MAHWAH TWP  BERGEN       0.01600    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-06-30   True
1564  MAHWAH TWP  BERGEN       0.01900    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-07-01   True
1565  MAHWAH TWP  BERGEN       0.01900    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-12-31   True
1566  MAHWAH TWP  BERGEN       0.03000    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-01-01   True
1567  MAHWAH TWP  BERGEN       0.03000    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-06-30   True
1568  MAHWAH TWP  BERGEN       0.02700    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-07-01   True
1569  MAHWAH TWP  BERGEN       0.02700    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-12-31   True
1570  MAHWAH TWP  BERGEN       0.01380    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2010-01-01  False
1571  MAHWAH TWP  BERGEN       0.01380    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2010-06-30  False
1572  MAHWAH TWP  BERGEN       0.01140    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2010-07-01  False
1573  MAHWAH TWP  BERGEN       0.01140    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2010-12-31  False
1574  MAHWAH TWP  BERGEN       0.01000    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2011-01-01  False
1575  MAHWAH TWP  BERGEN       0.01000    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2011-12-31  False
1576  MAHWAH TWP  BERGEN       0.01500    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2012-01-01  False
1577  MAHWAH TWP  BERGEN       0.01500    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2012-12-31  False
1578  MAHWAH TWP  BERGEN       0.00576    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2013-01-01  False
1579  MAHWAH TWP  BERGEN       0.00576    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2015-12-31  False
1580  MAHWAH TWP  BERGEN       0.00400    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2016-01-01  False
1581  MAHWAH TWP  BERGEN       0.00400    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2018-12-31  False
1582  MAHWAH TWP  BERGEN       0.00343    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2019-01-01  False
1583  MAHWAH TWP  BERGEN       0.00343    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2021-12-31  False
>>> lead_info[lead_info.City == 'NEWARK']
       City County  Lead in mg/L Muncode      PWSID        Water system name       date    mcl
904  NEWARK  ESSEX        0.0083    0714  NJ0714001  NEWARK WATER DEPARTMENT 2002-01-01  False
905  NEWARK  ESSEX        0.0083    0714  NJ0714001  NEWARK WATER DEPARTMENT 2004-12-31  False
906  NEWARK  ESSEX        0.0079    0714  NJ0714001  NEWARK WATER DEPARTMENT 2005-01-01  False
907  NEWARK  ESSEX        0.0110    0714  NJ0714001  NEWARK WATER DEPARTMENT 2007-01-01  False
908  NEWARK  ESSEX        0.0079    0714  NJ0714001  NEWARK WATER DEPARTMENT 2007-12-31  False
909  NEWARK  ESSEX        0.0110    0714  NJ0714001  NEWARK WATER DEPARTMENT 2009-12-31  False
910  NEWARK  ESSEX        0.0090    0714  NJ0714001  NEWARK WATER DEPARTMENT 2010-01-01  False
911  NEWARK  ESSEX        0.0090    0714  NJ0714001  NEWARK WATER DEPARTMENT 2012-12-31  False
912  NEWARK  ESSEX        0.0100    0714  NJ0714001  NEWARK WATER DEPARTMENT 2013-01-01  False
913  NEWARK  ESSEX        0.0100    0714  NJ0714001  NEWARK WATER DEPARTMENT 2015-12-31  False
914  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-01-01   True
915  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-06-30   True
916  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-07-01   True
917  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-12-31   True
918  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-01-01   True
919  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-06-30   True
920  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-07-01   True
921  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-12-31   True
922  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-01-01   True
923  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-06-30   True
924  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-07-01   True
925  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-12-31   True
926  NEWARK  ESSEX        0.0139    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-01-01  False
927  NEWARK  ESSEX        0.0139    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-06-30  False
928  NEWARK  ESSEX        0.0130    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-07-01  False
929  NEWARK  ESSEX        0.0130    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-12-31  False
930  NEWARK  ESSEX        0.0066    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-01-01  False
931  NEWARK  ESSEX        0.0066    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-06-30  False
932  NEWARK  ESSEX           NaN    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-07-01  False
933  NEWARK  ESSEX           NaN    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-12-31  False
>>> datetime
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'datetime' is not defined
>>> lead_info[1]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 1

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 1
>>> lead_info[904]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 904

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 904
>>> lead_info.get(904)
>>> print(lead_info.get(904))
None
>>> lead_info.iloc(904)
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 546, in _get_axis_number
    return cls._AXIS_TO_AXIS_NUMBER[axis]
KeyError: 904

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 637, in __call__
    axis = self.obj._get_axis_number(axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 548, in _get_axis_number
    raise ValueError(f"No axis named {axis} for object type {cls.__name__}")
ValueError: No axis named 904 for object type DataFrame
>>> lead_info.iloc[904]
City                                  NEWARK
County                                 ESSEX
Lead in mg/L                          0.0083
Muncode                                 0714
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
date                     2002-01-01 00:00:00
mcl                                    False
Name: 904, dtype: object
>>> lead_info.loc[904]
City                                  NEWARK
County                                 ESSEX
Lead in mg/L                          0.0083
Muncode                                 0714
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
date                     2002-01-01 00:00:00
mcl                                    False
Name: 904, dtype: object
>>> lead_info.loc[904].date
Timestamp('2002-01-01 00:00:00')
>>> lead_info.loc[904].date.year
2002
>>> lead_info[lead_info.date.year == 2002]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'year'
>>> lead_info.date
0      2003-01-01
1      2005-12-31
2      2006-01-01
3      2008-01-01
4      2008-12-31
          ...    
1733   2015-12-31
1734   2016-01-01
1735   2018-12-31
1736   2019-01-01
1737   2021-12-31
Name: date, Length: 1738, dtype: datetime64[ns]
>>> lead_info.date.year
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'year'
>>> lead_info.date == '2003-01-01'
0        True
1       False
2       False
3       False
4       False
        ...  
1733    False
1734    False
1735    False
1736    False
1737    False
Name: date, Length: 1738, dtype: bool
>>> lead_info.date.year == 2003
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'year'
>>> lead_info.date.strftime()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'strftime'
>>> lead_info['year'] == lead_info.date.year
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'year'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'year'
>>> for row in df.itertuples():
... 
  File "<stdin>", line 2
    
    ^
IndentationError: expected an indented block
>>> for row in lead_info.itertuples():
...    print(row.date)
... 
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2009-01-01 00:00:00
2010-12-31 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2004-01-01 00:00:00
2005-01-01 00:00:00
2006-12-31 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2009-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-12-31 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2006-01-01 00:00:00
2007-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2003-01-01 00:00:00
2004-12-31 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2006-01-01 00:00:00
2007-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2011-01-01 00:00:00
2012-12-31 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2002-01-01 00:00:00
2002-06-30 00:00:00
2002-07-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-06-30 00:00:00
2008-07-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-06-30 00:00:00
2010-07-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-06-30 00:00:00
2011-07-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-06-30 00:00:00
2012-07-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-06-30 00:00:00
2008-07-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-06-30 00:00:00
2009-07-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-06-30 00:00:00
2010-07-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-06-30 00:00:00
2011-07-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-06-30 00:00:00
2012-07-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2013-06-30 00:00:00
2013-07-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2016-06-30 00:00:00
2016-07-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2002-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-07-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-06-30 00:00:00
2012-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2005-01-01 00:00:00
2006-12-31 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2006-01-01 00:00:00
2007-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-07-01 00:00:00
2011-12-31 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-06-30 00:00:00
2013-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-06-30 00:00:00
2012-07-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2002-01-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2006-01-01 00:00:00
2007-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2003-01-01 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-06-30 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2002-06-30 00:00:00
2002-07-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2022-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2004-01-01 00:00:00
2005-12-31 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2009-01-01 00:00:00
2009-06-30 00:00:00
2009-07-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-06-30 00:00:00
2012-01-01 00:00:00
2012-06-30 00:00:00
2016-07-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2002-01-01 00:00:00
2002-03-31 00:00:00
2002-04-01 00:00:00
2002-06-30 00:00:00
2002-07-01 00:00:00
2002-09-30 00:00:00
2002-10-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2003-03-31 00:00:00
2003-04-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-09-30 00:00:00
2003-10-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2006-01-01 00:00:00
2007-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2023-12-31 00:00:00
2004-01-01 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2020-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2014-12-31 00:00:00
2015-01-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-06-30 00:00:00
2008-07-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-06-30 00:00:00
2009-07-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-06-30 00:00:00
2010-07-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-06-30 00:00:00
2011-07-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2013-12-31 00:00:00
2014-01-01 00:00:00
2016-12-31 00:00:00
2017-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-06-30 00:00:00
2008-07-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-06-30 00:00:00
2009-07-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2010-06-30 00:00:00
2010-07-01 00:00:00
2010-12-31 00:00:00
2011-01-01 00:00:00
2011-12-31 00:00:00
2012-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2001-01-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2002-06-30 00:00:00
2002-07-01 00:00:00
2002-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-06-30 00:00:00
2004-07-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-06-30 00:00:00
2005-07-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-06-30 00:00:00
2006-07-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2007-06-30 00:00:00
2007-07-01 00:00:00
2007-12-31 00:00:00
2008-01-01 00:00:00
2008-12-31 00:00:00
2009-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2003-06-30 00:00:00
2003-07-01 00:00:00
2003-12-31 00:00:00
2004-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2002-01-01 00:00:00
2004-12-31 00:00:00
2005-01-01 00:00:00
2007-01-01 00:00:00
2007-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-06-30 00:00:00
2019-07-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2017-01-01 00:00:00
2017-06-30 00:00:00
2017-07-01 00:00:00
2017-12-31 00:00:00
2018-01-01 00:00:00
2018-06-30 00:00:00
2018-07-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-06-30 00:00:00
2020-07-01 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
2021-06-30 00:00:00
2021-07-01 00:00:00
2021-12-31 00:00:00
2003-01-01 00:00:00
2005-12-31 00:00:00
2006-01-01 00:00:00
2007-01-01 00:00:00
2008-12-31 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
2004-01-01 00:00:00
2006-12-31 00:00:00
2007-01-01 00:00:00
2009-12-31 00:00:00
2010-01-01 00:00:00
2012-12-31 00:00:00
2013-01-01 00:00:00
2015-12-31 00:00:00
2016-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2021-12-31 00:00:00
>>> for row in lead_info.itertuples():
...    print(row.date.year)
... 
2003
2005
2006
2008
2008
2010
2011
2013
2014
2016
2017
2019
2020
2022
2002
2004
2005
2007
2008
2009
2010
2011
2012
2014
2015
2017
2018
2018
2018
2018
2019
2019
2020
2020
2021
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2005
2006
2008
2009
2011
2012
2014
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2004
2004
2004
2004
2005
2005
2005
2005
2006
2006
2007
2007
2008
2008
2009
2009
2010
2010
2011
2011
2012
2014
2015
2017
2018
2020
2021
2023
2004
2005
2006
2007
2008
2010
2011
2013
2014
2016
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2020
2020
2021
2021
2004
2004
2005
2005
2006
2006
2007
2007
2008
2009
2010
2011
2011
2013
2014
2016
2017
2019
2020
2022
2003
2003
2004
2004
2004
2004
2005
2005
2005
2005
2006
2006
2007
2007
2007
2007
2008
2008
2009
2009
2010
2010
2011
2013
2014
2016
2017
2019
2020
2022
2002
2004
2005
2006
2007
2008
2009
2011
2012
2014
2015
2017
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2002
2003
2004
2005
2006
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2002
2004
2005
2007
2008
2010
2011
2013
2014
2016
2017
2019
2020
2022
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2019
2019
2019
2020
2020
2021
2021
2002
2004
2005
2006
2007
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2003
2004
2004
2005
2005
2006
2007
2007
2007
2007
2008
2008
2008
2009
2009
2010
2011
2012
2013
2014
2016
2017
2019
2020
2022
2002
2002
2002
2002
2003
2003
2004
2004
2005
2005
2006
2006
2007
2007
2008
2010
2011
2013
2014
2016
2017
2019
2020
2022
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2003
2004
2004
2005
2005
2006
2008
2009
2011
2012
2014
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2007
2007
2007
2007
2008
2008
2009
2009
2010
2010
2011
2013
2014
2016
2017
2019
2020
2022
2002
2004
2005
2007
2008
2010
2011
2013
2014
2016
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2003
2003
2003
2004
2004
2004
2004
2005
2005
2005
2005
2006
2006
2006
2006
2007
2007
2008
2008
2008
2008
2009
2009
2010
2010
2010
2010
2011
2011
2011
2011
2012
2012
2012
2012
2013
2013
2014
2014
2015
2017
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2002
2004
2005
2007
2008
2010
2011
2013
2014
2016
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2002
2004
2005
2007
2007
2007
2007
2007
2008
2008
2009
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2004
2005
2005
2006
2006
2006
2006
2007
2007
2007
2007
2008
2008
2008
2008
2009
2009
2009
2009
2010
2010
2010
2010
2011
2011
2011
2011
2012
2012
2012
2012
2013
2013
2013
2013
2014
2014
2015
2015
2016
2016
2016
2016
2017
2017
2017
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2002
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2004
2005
2005
2006
2007
2008
2009
2010
2010
2011
2011
2012
2012
2013
2013
2014
2016
2017
2019
2020
2020
2020
2020
2021
2021
2021
2021
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2005
2006
2007
2008
2010
2011
2013
2014
2016
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2020
2020
2021
2021
2003
2005
2005
2006
2006
2006
2006
2007
2007
2007
2008
2008
2009
2009
2010
2010
2011
2011
2012
2014
2015
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2002
2003
2003
2004
2004
2005
2005
2006
2008
2009
2011
2012
2014
2015
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2002
2004
2005
2006
2007
2008
2009
2011
2011
2011
2012
2012
2013
2013
2014
2014
2015
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2003
2004
2004
2005
2005
2006
2006
2007
2007
2008
2010
2011
2013
2014
2016
2017
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2005
2006
2008
2009
2011
2012
2012
2012
2012
2013
2013
2014
2014
2015
2017
2018
2020
2021
2023
2002
2002
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2003
2004
2004
2005
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2005
2005
2005
2005
2005
2006
2006
2007
2007
2008
2008
2009
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2004
2005
2007
2008
2010
2011
2013
2014
2016
2017
2019
2020
2022
2002
2004
2005
2006
2007
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2002
2004
2005
2007
2007
2009
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2003
2005
2005
2005
2005
2005
2006
2006
2006
2006
2007
2007
2007
2007
2008
2008
2009
2009
2010
2010
2011
2013
2014
2016
2017
2017
2017
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2002
2004
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2002
2002
2002
2003
2003
2003
2003
2004
2004
2005
2005
2006
2006
2007
2007
2008
2010
2011
2013
2014
2016
2017
2019
2020
2022
2003
2003
2004
2004
2005
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2004
2005
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2009
2009
2009
2009
2010
2010
2011
2011
2012
2014
2015
2017
2018
2020
2021
2023
2003
2003
2004
2004
2005
2005
2006
2008
2009
2009
2012
2012
2016
2016
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2020
2020
2021
2021
2002
2002
2002
2002
2002
2002
2002
2002
2003
2003
2003
2003
2003
2003
2003
2003
2004
2004
2005
2005
2006
2006
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2005
2006
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2002
2004
2005
2006
2007
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2023
2004
2006
2006
2008
2009
2011
2012
2014
2017
2017
2017
2017
2018
2018
2019
2019
2020
2020
2021
2021
2003
2003
2004
2004
2004
2004
2005
2005
2006
2006
2007
2007
2008
2010
2011
2013
2014
2016
2018
2018
2019
2019
2020
2020
2021
2021
2003
2003
2004
2004
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2006
2008
2009
2011
2012
2014
2015
2017
2018
2020
2021
2021
2021
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2003
2003
2003
2004
2004
2004
2004
2005
2005
2005
2005
2006
2006
2006
2006
2007
2007
2007
2007
2008
2008
2008
2008
2009
2009
2009
2009
2010
2010
2010
2010
2011
2011
2011
2011
2012
2012
2013
2013
2014
2016
2017
2019
2020
2020
2020
2020
2021
2021
2021
2021
2004
2004
2005
2005
2006
2006
2006
2006
2007
2007
2007
2007
2008
2008
2008
2008
2009
2009
2009
2009
2010
2010
2010
2010
2011
2011
2012
2012
2013
2015
2016
2018
2019
2021
2001
2003
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2002
2002
2002
2003
2003
2003
2003
2004
2004
2004
2004
2005
2005
2005
2005
2006
2006
2006
2006
2007
2007
2007
2007
2008
2008
2009
2009
2010
2012
2013
2015
2016
2018
2019
2021
2003
2003
2003
2003
2004
2004
2005
2005
2006
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
2002
2004
2005
2007
2007
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2018
2018
2019
2019
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2017
2017
2017
2017
2018
2018
2018
2018
2019
2019
2020
2020
2020
2020
2021
2021
2021
2021
2003
2005
2006
2007
2008
2009
2010
2012
2013
2015
2016
2018
2019
2021
2004
2006
2007
2009
2010
2012
2013
2015
2016
2018
2019
2021
>>> years = []
>>> for row in lead_info.itertuples():
...   years.append(row.date.year)
... 
>>> years
[2003, 2005, 2006, 2008, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2014, 2015, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2005, 2006, 2008, 2009, 2011, 2012, 2014, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2004, 2004, 2004, 2004, 2005, 2005, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2010, 2011, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2009, 2010, 2011, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2003, 2003, 2004, 2004, 2004, 2004, 2005, 2005, 2005, 2005, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2002, 2004, 2005, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2021, 2021, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2008, 2009, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2002, 2002, 2002, 2002, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2008, 2009, 2011, 2012, 2014, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2002, 2004, 2005, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2003, 2003, 2003, 2004, 2004, 2004, 2004, 2005, 2005, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2008, 2008, 2008, 2008, 2009, 2009, 2010, 2010, 2010, 2010, 2011, 2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2014, 2014, 2015, 2017, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2002, 2004, 2005, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2002, 2004, 2005, 2007, 2007, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2004, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2008, 2008, 2009, 2009, 2009, 2009, 2010, 2010, 2010, 2010, 2011, 2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013, 2014, 2014, 2015, 2015, 2016, 2016, 2016, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2002, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2004, 2005, 2005, 2006, 2007, 2008, 2009, 2010, 2010, 2011, 2011, 2012, 2012, 2013, 2013, 2014, 2016, 2017, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2003, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2010, 2011, 2011, 2012, 2014, 2015, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2002, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2011, 2011, 2012, 2012, 2013, 2013, 2014, 2014, 2015, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2005, 2006, 2008, 2009, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2014, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2002, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2005, 2005, 2005, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2004, 2005, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2002, 2004, 2005, 2007, 2007, 2009, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2003, 2005, 2005, 2005, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2010, 2011, 2013, 2014, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2002, 2004, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2002, 2002, 2002, 2003, 2003, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2017, 2019, 2020, 2022, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2009, 2009, 2009, 2009, 2010, 2010, 2011, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2008, 2009, 2009, 2012, 2012, 2016, 2016, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2005, 2006, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2023, 2004, 2006, 2006, 2008, 2009, 2011, 2012, 2014, 2017, 2017, 2017, 2017, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2003, 2004, 2004, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2007, 2008, 2010, 2011, 2013, 2014, 2016, 2018, 2018, 2019, 2019, 2020, 2020, 2021, 2021, 2003, 2003, 2004, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2006, 2008, 2009, 2011, 2012, 2014, 2015, 2017, 2018, 2020, 2021, 2021, 2021, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2003, 2003, 2003, 2004, 2004, 2004, 2004, 2005, 2005, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2008, 2008, 2009, 2009, 2009, 2009, 2010, 2010, 2010, 2010, 2011, 2011, 2011, 2011, 2012, 2012, 2013, 2013, 2014, 2016, 2017, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2004, 2004, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2008, 2008, 2009, 2009, 2009, 2009, 2010, 2010, 2010, 2010, 2011, 2011, 2012, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2001, 2003, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2002, 2002, 2002, 2003, 2003, 2003, 2003, 2004, 2004, 2004, 2004, 2005, 2005, 2005, 2005, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007, 2008, 2008, 2009, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2003, 2003, 2003, 2003, 2004, 2004, 2005, 2005, 2006, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2002, 2004, 2005, 2007, 2007, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2017, 2017, 2017, 2017, 2018, 2018, 2018, 2018, 2019, 2019, 2020, 2020, 2020, 2020, 2021, 2021, 2021, 2021, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021, 2004, 2006, 2007, 2009, 2010, 2012, 2013, 2015, 2016, 2018, 2019, 2021]
>>> lead_info['year'] = years
>>> lead_info.year
0       2003
1       2005
2       2006
3       2008
4       2008
        ... 
1733    2015
1734    2016
1735    2018
1736    2019
1737    2021
Name: year, Length: 1738, dtype: int64
>>> lead_info.head()
                  City  County  Lead in mg/L Muncode      PWSID         Water system name       date    mcl  year
0  MOUNTAIN LAKES BORO  MORRIS         0.003    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2003-01-01  False  2003
1  MOUNTAIN LAKES BORO  MORRIS         0.003    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2005-12-31  False  2005
2  MOUNTAIN LAKES BORO  MORRIS         0.006    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2006-01-01  False  2006
3  MOUNTAIN LAKES BORO  MORRIS         0.008    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-01-01  False  2008
4  MOUNTAIN LAKES BORO  MORRIS         0.006    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-12-31  False  2008
>>> lead2003 = lead_info[lead_info.year == 2003]
>>> lead2003
                     City   County  Lead in mg/L Muncode      PWSID            Water system name       date    mcl  year
0     MOUNTAIN LAKES BORO   MORRIS         0.003    1425  NJ1425001     MOUNTAIN LAKES WATER DEP 2003-01-01  False  2003
36        LIVINGSTON TWP.    ESSEX         0.000    0710  NJ0710001  LIVINGSTON TWP DIV OF WATER 2003-01-01  False  2003
72         ELIZABETH CITY    UNION         0.005    2004  NJ2004001  NJ AMERICAN WATER - LIBERTY 2003-01-01  False  2003
164       GLEN RIDGE BORO    ESSEX         0.000    0708  NJ0708001        GLEN RIDGE WATER DEPT 2003-07-01  False  2003
165       GLEN RIDGE BORO    ESSEX         0.000    0708  NJ0708001        GLEN RIDGE WATER DEPT 2003-12-31  False  2003
...                   ...      ...           ...     ...        ...                          ...        ...    ...   ...
1635          KEARNY TOWN   HUDSON         0.009    0907  NJ0907001      KEARNY WATER DEPARTMENT 2003-06-30  False  2003
1636          KEARNY TOWN   HUDSON         0.008    0907  NJ0907001      KEARNY WATER DEPARTMENT 2003-07-01  False  2003
1637          KEARNY TOWN   HUDSON         0.008    0907  NJ0907001      KEARNY WATER DEPARTMENT 2003-12-31  False  2003
1684        RINGWOOD BORO  PASSAIC           NaN    1611  NJ1611002    RINGWOOD WATER DEPARTMENT 2003-01-01  False  2003
1712    BLOOMINGDALE BORO  PASSAIC         0.006    1601  NJ1601001      BLOOMINGDALE WATER DEPT 2003-01-01  False  2003

[77 rows x 9 columns]
>>> lead_info.year
0       2003
1       2005
2       2006
3       2008
4       2008
        ... 
1733    2015
1734    2016
1735    2018
1736    2019
1737    2021
Name: year, Length: 1738, dtype: int64
>>> lead_info.groupby
<bound method DataFrame.groupby of                      City  County  Lead in mg/L Muncode      PWSID         Water system name       date    mcl  year
0     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2003-01-01  False  2003
1     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2005-12-31  False  2005
2     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2006-01-01  False  2006
3     MOUNTAIN LAKES BORO  MORRIS       0.00800    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-01-01  False  2008
4     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-12-31  False  2008
...                   ...     ...           ...     ...        ...                       ...        ...    ...   ...
1733    FLORHAM PARK BORO  MORRIS       0.00245    1411  NJ1411001   FLORHAM PARK WATER DEPT 2015-12-31  False  2015
1734    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2016-01-01  False  2016
1735    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2018-12-31  False  2018
1736    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2019-01-01  False  2019
1737    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2021-12-31  False  2021

[1738 rows x 9 columns]>
>>> lead_info.groupby(by='Muncode').sum('mcl')
         Lead in mg/L  mcl    year
Muncode                           
 2004        0.064000    0   40292
0201         0.099760    0   28154
0211         0.030580    0   32166
0217         0.050860    0   44306
0220         0.136400    0   48362
...               ...  ...     ...
1614         0.046464    0   48308
1616         0.000000    0   36178
1911         0.031180    0  132688
1918         0.130920    2   88568
HILLS        0.247840    0   96716

[73 rows x 3 columns]
>>> lead_info.groupby(by=['Muncode','Year'])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 7631, in groupby
    return DataFrameGroupBy(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/groupby.py", line 889, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/grouper.py", line 862, in get_grouper
    raise KeyError(gpr)
KeyError: 'Year'
>>> lead_info.groupby(by=['Muncode','Year']).sum('mcl')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 7631, in groupby
    return DataFrameGroupBy(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/groupby.py", line 889, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/grouper.py", line 862, in get_grouper
    raise KeyError(gpr)
KeyError: 'Year'
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl')
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
HILLS   2017       0.04000    0
        2018       0.01680    0
        2019       0.01600    0
        2020       0.03400    0
        2021       0.02104    0

[1076 rows x 2 columns]
>>> lead_info.groupby(by=['Muncode','year']).sum()
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
HILLS   2017       0.04000    0
        2018       0.01680    0
        2019       0.01600    0
        2020       0.03400    0
        2021       0.02104    0

[1076 rows x 2 columns]
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl').head()
              Lead in mg/L  mcl
Muncode year                   
 2004   2003         0.005    0
        2005         0.005    0
        2006         0.005    0
        2008         0.005    0
        2009         0.003    0
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl').head(10)
              Lead in mg/L  mcl
Muncode year                   
 2004   2003         0.005    0
        2005         0.005    0
        2006         0.005    0
        2008         0.005    0
        2009         0.003    0
        2011         0.003    0
        2012         0.002    0
        2014         0.002    0
        2017         0.010    0
        2018         0.012    0
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl').head(100)
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
0223    2019       0.05340    2
        2020       0.03450    0
        2021       0.01228    0
0231    2002       0.00000    0
        2005       0.00630    0

[100 rows x 2 columns]
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl')[3:10]
              Lead in mg/L  mcl
Muncode year                   
 2004   2008         0.005    0
        2009         0.003    0
        2011         0.003    0
        2012         0.002    0
        2014         0.002    0
        2017         0.010    0
        2018         0.012    0
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl')[50:90]
              Lead in mg/L  mcl
Muncode year                   
0217    2015       0.00000    0
        2017       0.00000    0
        2018       0.01526    0
        2019       0.00620    0
        2020       0.00000    0
        2021       0.00422    0
0220    2003       0.00000    0
        2005       0.00000    0
        2006       0.00570    0
        2007       0.00200    0
        2008       0.00570    0
        2009       0.00200    0
        2010       0.00200    0
        2012       0.00200    0
        2013       0.00400    0
        2015       0.00400    0
        2016       0.01000    0
        2018       0.01000    0
        2019       0.04600    0
        2020       0.02902    0
        2021       0.01398    0
0221    2002       0.00400    0
        2004       0.00400    0
        2005       0.00600    0
        2007       0.01000    0
        2009       0.00400    0
        2010       0.00450    0
        2012       0.00450    0
        2013       0.00301    0
        2015       0.00301    0
        2016       0.00508    0
        2018       0.00508    0
        2019       0.00330    0
        2021       0.00330    0
0223    2002       0.00770    0
        2004       0.00770    0
        2005       0.01100    0
        2007       0.02200    0
        2009       0.01100    0
        2010       0.01430    0
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl','City')[50:90]
<stdin>:1: FutureWarning: Dropping invalid columns in DataFrameGroupBy.add is deprecated. In a future version, a TypeError will be raised. Before calling .add, select only columns which should be valid for the function.
Empty DataFrame
Columns: []
Index: [(0217, 2015), (0217, 2017), (0217, 2018), (0217, 2019), (0217, 2020), (0217, 2021), (0220, 2003), (0220, 2005), (0220, 2006), (0220, 2007), (0220, 2008), (0220, 2009), (0220, 2010), (0220, 2012), (0220, 2013), (0220, 2015), (0220, 2016), (0220, 2018), (0220, 2019), (0220, 2020), (0220, 2021), (0221, 2002), (0221, 2004), (0221, 2005), (0221, 2007), (0221, 2009), (0221, 2010), (0221, 2012), (0221, 2013), (0221, 2015), (0221, 2016), (0221, 2018), (0221, 2019), (0221, 2021), (0223, 2002), (0223, 2004), (0223, 2005), (0223, 2007), (0223, 2009), (0223, 2010)]
>>> lead_info.groupby(by=['Muncode','year']).sum('mcl')[50:90]
              Lead in mg/L  mcl
Muncode year                   
0217    2015       0.00000    0
        2017       0.00000    0
        2018       0.01526    0
        2019       0.00620    0
        2020       0.00000    0
        2021       0.00422    0
0220    2003       0.00000    0
        2005       0.00000    0
        2006       0.00570    0
        2007       0.00200    0
        2008       0.00570    0
        2009       0.00200    0
        2010       0.00200    0
        2012       0.00200    0
        2013       0.00400    0
        2015       0.00400    0
        2016       0.01000    0
        2018       0.01000    0
        2019       0.04600    0
        2020       0.02902    0
        2021       0.01398    0
0221    2002       0.00400    0
        2004       0.00400    0
        2005       0.00600    0
        2007       0.01000    0
        2009       0.00400    0
        2010       0.00450    0
        2012       0.00450    0
        2013       0.00301    0
        2015       0.00301    0
        2016       0.00508    0
        2018       0.00508    0
        2019       0.00330    0
        2021       0.00330    0
0223    2002       0.00770    0
        2004       0.00770    0
        2005       0.01100    0
        2007       0.02200    0
        2009       0.01100    0
        2010       0.01430    0
>>> lead_info.groupby(by=['Muncode','City','year']).sum('mcl')[50:90]
                                  Lead in mg/L  mcl
Muncode City                year                   
0217    FAIR LAWN BORO      2015       0.00000    0
                            2017       0.00000    0
                            2018       0.01526    0
                            2019       0.00620    0
                            2020       0.00000    0
                            2021       0.00422    0
0220    FRANKLIN LAKES BORO 2003       0.00000    0
                            2005       0.00000    0
                            2006       0.00570    0
                            2007       0.00200    0
                            2008       0.00570    0
                            2009       0.00200    0
                            2010       0.00200    0
                            2012       0.00200    0
                            2013       0.00400    0
                            2015       0.00400    0
                            2016       0.01000    0
                            2018       0.01000    0
                            2019       0.04600    0
                            2020       0.02902    0
                            2021       0.01398    0
0221    GARFIELD CITY       2002       0.00400    0
                            2004       0.00400    0
                            2005       0.00600    0
                            2007       0.01000    0
                            2009       0.00400    0
                            2010       0.00450    0
                            2012       0.00450    0
                            2013       0.00301    0
                            2015       0.00301    0
                            2016       0.00508    0
                            2018       0.00508    0
                            2019       0.00330    0
                            2021       0.00330    0
0223    HACKENSACK CITY     2002       0.00770    0
                            2004       0.00770    0
                            2005       0.01100    0
                            2007       0.02200    0
                            2009       0.01100    0
                            2010       0.01430    0
>>> lead_info.groupby(by=['Muncode','City','year']).sum('mcl')[90:110]
                              Lead in mg/L  mcl
Muncode City            year                   
0223    HACKENSACK CITY 2012       0.01430    0
                        2013       0.01400    0
                        2015       0.01400    0
                        2017       0.05140    0
                        2018       0.05680    2
                        2019       0.05340    2
                        2020       0.03450    0
                        2021       0.01228    0
0231    LODI BORO       2002       0.00000    0
                        2005       0.00630    0
                        2007       0.00630    0
                        2009       0.00000    0
                        2010       0.00175    0
                        2012       0.00175    0
                        2013       0.00267    0
                        2015       0.00267    0
                        2016       0.00163    0
                        2018       0.00163    0
                        2019       0.00100    0
                        2021       0.00100    0
>>> lyr = lead_info.groupby(by=['Muncode','City','year']).sum('mcl')
>>> lyr[lyr.year==2012]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'year'
>>> lyr
                              Lead in mg/L  mcl
Muncode City            year                   
 2004   ELIZABETH CITY  2003       0.00500    0
                        2005       0.00500    0
                        2006       0.00500    0
                        2008       0.00500    0
                        2009       0.00300    0
...                                    ...  ...
HILLS   PARSIPPANY TROY 2017       0.04000    0
                        2018       0.01680    0
                        2019       0.01600    0
                        2020       0.03400    0
                        2021       0.02104    0

[1076 rows x 2 columns]
>>> lyr[lyr['year']==2012]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'year'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'year'
>>> lyr.columns
Index(['Lead in mg/L', 'mcl'], dtype='object')
>>> lyr
                              Lead in mg/L  mcl
Muncode City            year                   
 2004   ELIZABETH CITY  2003       0.00500    0
                        2005       0.00500    0
                        2006       0.00500    0
                        2008       0.00500    0
                        2009       0.00300    0
...                                    ...  ...
HILLS   PARSIPPANY TROY 2017       0.04000    0
                        2018       0.01680    0
                        2019       0.01600    0
                        2020       0.03400    0
                        2021       0.02104    0

[1076 rows x 2 columns]
>>> lyr[50:80]
                                  Lead in mg/L  mcl
Muncode City                year                   
0217    FAIR LAWN BORO      2015       0.00000    0
                            2017       0.00000    0
                            2018       0.01526    0
                            2019       0.00620    0
                            2020       0.00000    0
                            2021       0.00422    0
0220    FRANKLIN LAKES BORO 2003       0.00000    0
                            2005       0.00000    0
                            2006       0.00570    0
                            2007       0.00200    0
                            2008       0.00570    0
                            2009       0.00200    0
                            2010       0.00200    0
                            2012       0.00200    0
                            2013       0.00400    0
                            2015       0.00400    0
                            2016       0.01000    0
                            2018       0.01000    0
                            2019       0.04600    0
                            2020       0.02902    0
                            2021       0.01398    0
0221    GARFIELD CITY       2002       0.00400    0
                            2004       0.00400    0
                            2005       0.00600    0
                            2007       0.01000    0
                            2009       0.00400    0
                            2010       0.00450    0
                            2012       0.00450    0
                            2013       0.00301    0
                            2015       0.00301    0
>>> lyr[mcl]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'mcl' is not defined
>>> lyr['mcl']
Muncode  City             year
 2004    ELIZABETH CITY   2003    0
                          2005    0
                          2006    0
                          2008    0
                          2009    0
                                 ..
HILLS    PARSIPPANY TROY  2017    0
                          2018    0
                          2019    0
                          2020    0
                          2021    0
Name: mcl, Length: 1076, dtype: int64
>>> lyr.mcl
Muncode  City             year
 2004    ELIZABETH CITY   2003    0
                          2005    0
                          2006    0
                          2008    0
                          2009    0
                                 ..
HILLS    PARSIPPANY TROY  2017    0
                          2018    0
                          2019    0
                          2020    0
                          2021    0
Name: mcl, Length: 1076, dtype: int64
>>> lyr.year
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'year'
>>> arrays = [[1, 1, 2, 2], ['red', 'blue', 'red', 'blue']]
>>> 
>>> pd.MultiIndex.from_arrays(arrays, names=('number', 'color'))
MultiIndex([(1,  'red'),
            (1, 'blue'),
            (2,  'red'),
            (2, 'blue')],
           names=['number', 'color'])
>>> MultiIndex([(1,  'red'),
...             (1, 'blue'),
...             (2,  'red'),
...             (2, 'blue')],
...            names=['number', 'color'])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'MultiIndex' is not defined
>>> lyr.loc[1]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 1

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 931, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1164, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1113, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 3770, in xs
    loc, new_index = index._get_loc_level(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3112, in _get_loc_level
    indexer = self._get_level_indexer(key, level=level)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3204, in _get_level_indexer
    idx = self._get_loc_single_level_index(level_index, key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2855, in _get_loc_single_level_index
    return level_index.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 1
>>> lyr.loc['1']
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: '1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 931, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1164, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1113, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 3770, in xs
    loc, new_index = index._get_loc_level(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3112, in _get_loc_level
    indexer = self._get_level_indexer(key, level=level)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3204, in _get_level_indexer
    idx = self._get_loc_single_level_index(level_index, key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2855, in _get_loc_single_level_index
    return level_index.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: '1'
>>> lyr.loc['2006']
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: '2006'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 931, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1164, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1113, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 3770, in xs
    loc, new_index = index._get_loc_level(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3112, in _get_loc_level
    indexer = self._get_level_indexer(key, level=level)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 3204, in _get_level_indexer
    idx = self._get_loc_single_level_index(level_index, key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2855, in _get_loc_single_level_index
    return level_index.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: '2006'
>>> lyr.loc['0220']
                          Lead in mg/L  mcl
City                year                   
FRANKLIN LAKES BORO 2003       0.00000    0
                    2005       0.00000    0
                    2006       0.00570    0
                    2007       0.00200    0
                    2008       0.00570    0
                    2009       0.00200    0
                    2010       0.00200    0
                    2012       0.00200    0
                    2013       0.00400    0
                    2015       0.00400    0
                    2016       0.01000    0
                    2018       0.01000    0
                    2019       0.04600    0
                    2020       0.02902    0
                    2021       0.01398    0
>>> lyr.loc['0220','2003']
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: '2003'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 925, in __getitem__
    return self._getitem_tuple(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1100, in _getitem_tuple
    return self._getitem_lowerdim(tup)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 862, in _getitem_lowerdim
    return getattr(section, self.name)[new_key]
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 925, in __getitem__
    return self._getitem_tuple(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1100, in _getitem_tuple
    return self._getitem_lowerdim(tup)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 822, in _getitem_lowerdim
    return self._getitem_nested_tuple(tup)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 906, in _getitem_nested_tuple
    obj = getattr(obj, self.name)._getitem_axis(key, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1164, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexing.py", line 1113, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 3761, in xs
    return self[key]
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: '2003'
>>> lyr.names
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'names'
>>> lyr.index
MultiIndex([(' 2004',  'ELIZABETH CITY', 2003),
            (' 2004',  'ELIZABETH CITY', 2005),
            (' 2004',  'ELIZABETH CITY', 2006),
            (' 2004',  'ELIZABETH CITY', 2008),
            (' 2004',  'ELIZABETH CITY', 2009),
            (' 2004',  'ELIZABETH CITY', 2011),
            (' 2004',  'ELIZABETH CITY', 2012),
            (' 2004',  'ELIZABETH CITY', 2014),
            (' 2004',  'ELIZABETH CITY', 2017),
            (' 2004',  'ELIZABETH CITY', 2018),
            ...
            ('HILLS', 'PARSIPPANY TROY', 2010),
            ('HILLS', 'PARSIPPANY TROY', 2011),
            ('HILLS', 'PARSIPPANY TROY', 2013),
            ('HILLS', 'PARSIPPANY TROY', 2014),
            ('HILLS', 'PARSIPPANY TROY', 2016),
            ('HILLS', 'PARSIPPANY TROY', 2017),
            ('HILLS', 'PARSIPPANY TROY', 2018),
            ('HILLS', 'PARSIPPANY TROY', 2019),
            ('HILLS', 'PARSIPPANY TROY', 2020),
            ('HILLS', 'PARSIPPANY TROY', 2021)],
           names=['Muncode', 'City', 'year'], length=1076)
>>> lyr.index[1]
(' 2004', 'ELIZABETH CITY', 2005)
>>> lyr.index[:1]
MultiIndex([(' 2004', 'ELIZABETH CITY', 2003)],
           names=['Muncode', 'City', 'year'])
>>> lyr.index[,1:]
  File "<stdin>", line 1
    lyr.index[,1:]
              ^
SyntaxError: invalid syntax
>>> lyr.index[:,1]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in __getitem__
    new_codes = [level_codes[key] for level_codes in self.codes]
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in <listcomp>
    new_codes = [level_codes[key] for level_codes in self.codes]
IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed
>>> lyr.index[:,0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in __getitem__
    new_codes = [level_codes[key] for level_codes in self.codes]
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in <listcomp>
    new_codes = [level_codes[key] for level_codes in self.codes]
IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed
>>> lyr.index[2]
(' 2004', 'ELIZABETH CITY', 2006)
>>> lyr.index[:2]
MultiIndex([(' 2004', 'ELIZABETH CITY', 2003),
            (' 2004', 'ELIZABETH CITY', 2005)],
           names=['Muncode', 'City', 'year'])
>>> lyr.index[:,2]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in __getitem__
    new_codes = [level_codes[key] for level_codes in self.codes]
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 2060, in <listcomp>
    new_codes = [level_codes[key] for level_codes in self.codes]
IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed
>>> lyr.index[2]
(' 2004', 'ELIZABETH CITY', 2006)
>>> lyr.index[2][2]
2006
>>> lead_info.groupby(by='year')
<pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fc1e8a31550>
>>> lead_info.groupby(by='year').sum()
      Lead in mg/L  mcl
year                   
2001      0.004100    0
2002      0.121400    2
2003      0.234400    2
2004      0.439800    4
2005      0.639900    9
2006      0.597150    8
2007      0.557100    6
2008      0.411990    8
2009      0.672480   11
2010      0.396492    2
2011      0.431226    4
2012      0.427192    4
2013      0.310371    0
2014      0.172235    0
2015      0.329105    4
2016      0.249705    2
2017      0.605358    6
2018      0.621750   10
2019      0.747060   14
2020      0.426840    4
2021      0.326170    0
2022      0.000000    0
2023      0.000000    0
>>> lyr.index.names
FrozenList(['Muncode', 'City', 'year'])
>>> lyr.index.nlevels
3
>>> lyr.index.levshape
(73, 73, 23)
>>> lyr.index.to_flat_index()
Index([ (' 2004', 'ELIZABETH CITY', 2003),  (' 2004', 'ELIZABETH CITY', 2005),
        (' 2004', 'ELIZABETH CITY', 2006),  (' 2004', 'ELIZABETH CITY', 2008),
        (' 2004', 'ELIZABETH CITY', 2009),  (' 2004', 'ELIZABETH CITY', 2011),
        (' 2004', 'ELIZABETH CITY', 2012),  (' 2004', 'ELIZABETH CITY', 2014),
        (' 2004', 'ELIZABETH CITY', 2017),  (' 2004', 'ELIZABETH CITY', 2018),
       ...
       ('HILLS', 'PARSIPPANY TROY', 2010), ('HILLS', 'PARSIPPANY TROY', 2011),
       ('HILLS', 'PARSIPPANY TROY', 2013), ('HILLS', 'PARSIPPANY TROY', 2014),
       ('HILLS', 'PARSIPPANY TROY', 2016), ('HILLS', 'PARSIPPANY TROY', 2017),
       ('HILLS', 'PARSIPPANY TROY', 2018), ('HILLS', 'PARSIPPANY TROY', 2019),
       ('HILLS', 'PARSIPPANY TROY', 2020), ('HILLS', 'PARSIPPANY TROY', 2021)],
      dtype='object', length=1076)
>>> lyr.groupby(level=3).sum('mcl')
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 1523, in _get_level_number
    level = self.names.index(level)
ValueError: 3 is not in list

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 7631, in groupby
    return DataFrameGroupBy(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/groupby.py", line 889, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/groupby/grouper.py", line 732, in get_grouper
    key = group_axis.get_level_values(level)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 1676, in get_level_values
    level = self._get_level_number(level)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/multi.py", line 1537, in _get_level_number
    raise IndexError(
IndexError: Too many levels: Index has only 3 levels, not 4
>>> lyr.groupby(level=2).sum('mcl')
      Lead in mg/L  mcl
year                   
2001      0.004100    0
2002      0.121400    2
2003      0.234400    2
2004      0.439800    4
2005      0.639900    9
2006      0.597150    8
2007      0.557100    6
2008      0.411990    8
2009      0.672480   11
2010      0.396492    2
2011      0.431226    4
2012      0.427192    4
2013      0.310371    0
2014      0.172235    0
2015      0.329105    4
2016      0.249705    2
2017      0.605358    6
2018      0.621750   10
2019      0.747060   14
2020      0.426840    4
2021      0.326170    0
2022      0.000000    0
2023      0.000000    0
>>> lyr.groupby(level=[0,2]).sum('mcl')
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
HILLS   2017       0.04000    0
        2018       0.01680    0
        2019       0.01600    0
        2020       0.03400    0
        2021       0.02104    0

[1076 rows x 2 columns]
>>> lyr.groupby(level=[0,1,2]).sum('mcl')
                              Lead in mg/L  mcl
Muncode City            year                   
 2004   ELIZABETH CITY  2003       0.00500    0
                        2005       0.00500    0
                        2006       0.00500    0
                        2008       0.00500    0
                        2009       0.00300    0
...                                    ...  ...
HILLS   PARSIPPANY TROY 2017       0.04000    0
                        2018       0.01680    0
                        2019       0.01600    0
                        2020       0.03400    0
                        2021       0.02104    0

[1076 rows x 2 columns]
>>> lyr.reset_index(level=2)
                         year  Lead in mg/L  mcl
Muncode City                                    
 2004   ELIZABETH CITY   2003       0.00500    0
        ELIZABETH CITY   2005       0.00500    0
        ELIZABETH CITY   2006       0.00500    0
        ELIZABETH CITY   2008       0.00500    0
        ELIZABETH CITY   2009       0.00300    0
...                       ...           ...  ...
HILLS   PARSIPPANY TROY  2017       0.04000    0
        PARSIPPANY TROY  2018       0.01680    0
        PARSIPPANY TROY  2019       0.01600    0
        PARSIPPANY TROY  2020       0.03400    0
        PARSIPPANY TROY  2021       0.02104    0

[1076 rows x 3 columns]
>>> tyr = lyr.reset_index(level=2)
>>> tyr.groupby(by='year').sum('mcl')
      Lead in mg/L  mcl
year                   
2001      0.004100    0
2002      0.121400    2
2003      0.234400    2
2004      0.439800    4
2005      0.639900    9
2006      0.597150    8
2007      0.557100    6
2008      0.411990    8
2009      0.672480   11
2010      0.396492    2
2011      0.431226    4
2012      0.427192    4
2013      0.310371    0
2014      0.172235    0
2015      0.329105    4
2016      0.249705    2
2017      0.605358    6
2018      0.621750   10
2019      0.747060   14
2020      0.426840    4
2021      0.326170    0
2022      0.000000    0
2023      0.000000    0
>>> tyr = lyr.reset_index(level=[1,2])
>>> tyr
                    City  year  Lead in mg/L  mcl
Muncode                                          
 2004     ELIZABETH CITY  2003       0.00500    0
 2004     ELIZABETH CITY  2005       0.00500    0
 2004     ELIZABETH CITY  2006       0.00500    0
 2004     ELIZABETH CITY  2008       0.00500    0
 2004     ELIZABETH CITY  2009       0.00300    0
...                  ...   ...           ...  ...
HILLS    PARSIPPANY TROY  2017       0.04000    0
HILLS    PARSIPPANY TROY  2018       0.01680    0
HILLS    PARSIPPANY TROY  2019       0.01600    0
HILLS    PARSIPPANY TROY  2020       0.03400    0
HILLS    PARSIPPANY TROY  2021       0.02104    0

[1076 rows x 4 columns]
>>> tyr.gropuby(by=['City','year'].sum('mcl')
... 
... )
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'gropuby'
>>> tyr.groupby(by=['City','year']).sum('mcl')
                         Lead in mg/L  mcl
City               year                   
ALLENDALE BORO     2001        0.0000    0
                   2003        0.0000    0
                   2004        0.0083    0
                   2006        0.0083    0
                   2007        0.0099    0
...                               ...  ...
WOODLAND PARK BORO 2015        0.0000    0
                   2016        0.0000    0
                   2018        0.0000    0
                   2019        0.0000    0
                   2021        0.0000    0

[1076 rows x 2 columns]
>>> tyr['mcl_year'] = tyr[tyr[mcl] > 0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'mcl' is not defined
>>> tyr['mcl_year'] = tyr[tyr.mcl > 0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3602, in __setitem__
    self._set_item_frame_value(key, value)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3741, in _set_item_frame_value
    arraylike = _reindex_for_setitem(value, self.index)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 10780, in _reindex_for_setitem
    raise err
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 10775, in _reindex_for_setitem
    reindexed_value = value.reindex(index)._values
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/util/_decorators.py", line 324, in wrapper
    return func(*args, **kwargs)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 4772, in reindex
    return super().reindex(**kwargs)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 4818, in reindex
    return self._reindex_axes(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 4597, in _reindex_axes
    frame = frame._reindex_index(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 4616, in _reindex_index
    return self._reindex_with_indexers(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 4883, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/managers.py", line 670, in reindex_indexer
    self.axes[axis]._validate_can_reindex(indexer)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3785, in _validate_can_reindex
    raise ValueError("cannot reindex from a duplicate axis")
ValueError: cannot reindex from a duplicate axis
>>> tyr = lyr.reset_index()
>>> tyr
     Muncode             City  year  Lead in mg/L  mcl
0       2004   ELIZABETH CITY  2003       0.00500    0
1       2004   ELIZABETH CITY  2005       0.00500    0
2       2004   ELIZABETH CITY  2006       0.00500    0
3       2004   ELIZABETH CITY  2008       0.00500    0
4       2004   ELIZABETH CITY  2009       0.00300    0
...      ...              ...   ...           ...  ...
1071   HILLS  PARSIPPANY TROY  2017       0.04000    0
1072   HILLS  PARSIPPANY TROY  2018       0.01680    0
1073   HILLS  PARSIPPANY TROY  2019       0.01600    0
1074   HILLS  PARSIPPANY TROY  2020       0.03400    0
1075   HILLS  PARSIPPANY TROY  2021       0.02104    0

[1076 rows x 5 columns]
>>> tyr.groupby(by=['Muncode','year']).sum('mcl')
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
HILLS   2017       0.04000    0
        2018       0.01680    0
        2019       0.01600    0
        2020       0.03400    0
        2021       0.02104    0

[1076 rows x 2 columns]
>>> tyr.Muncode
0        2004
1        2004
2        2004
3        2004
4        2004
        ...  
1071    HILLS
1072    HILLS
1073    HILLS
1074    HILLS
1075    HILLS
Name: Muncode, Length: 1076, dtype: object
>>> print(tyr.Muncode)
0        2004
1        2004
2        2004
3        2004
4        2004
        ...  
1071    HILLS
1072    HILLS
1073    HILLS
1074    HILLS
1075    HILLS
Name: Muncode, Length: 1076, dtype: object
>>> tyr.Muncode[0:1075]
0        2004
1        2004
2        2004
3        2004
4        2004
        ...  
1070    HILLS
1071    HILLS
1072    HILLS
1073    HILLS
1074    HILLS
Name: Muncode, Length: 1075, dtype: object
>>> tyr.Muncode[1060:1075]
1060     1918
1061    HILLS
1062    HILLS
1063    HILLS
1064    HILLS
1065    HILLS
1066    HILLS
1067    HILLS
1068    HILLS
1069    HILLS
1070    HILLS
1071    HILLS
1072    HILLS
1073    HILLS
1074    HILLS
Name: Muncode, dtype: object
>>> tyr.Muncode[1040:1060]
1040    1911
1041    1911
1042    1911
1043    1911
1044    1911
1045    1918
1046    1918
1047    1918
1048    1918
1049    1918
1050    1918
1051    1918
1052    1918
1053    1918
1054    1918
1055    1918
1056    1918
1057    1918
1058    1918
1059    1918
Name: Muncode, dtype: object
>>> tyr.Muncode[500:550]
500    0719
501    0719
502    0719
503    0719
504    0719
505    0720
506    0720
507    0720
508    0720
509    0720
510    0720
511    0720
512    0720
513    0720
514    0720
515    0720
516    0720
517    0720
518    0720
519    0720
520    0720
521    0721
522    0721
523    0721
524    0721
525    0721
526    0721
527    0721
528    0721
529    0721
530    0721
531    0721
532    0721
533    0721
534    0721
535    0808
536    0808
537    0808
538    0808
539    0808
540    0808
541    0808
542    0808
543    0808
544    0808
545    0808
546    0808
547    0808
548    0808
549    0808
Name: Muncode, dtype: object
>>> tyr.groupby(by=['Muncode','year']).sum('mcl')
              Lead in mg/L  mcl
Muncode year                   
 2004   2003       0.00500    0
        2005       0.00500    0
        2006       0.00500    0
        2008       0.00500    0
        2009       0.00300    0
...                    ...  ...
HILLS   2017       0.04000    0
        2018       0.01680    0
        2019       0.01600    0
        2020       0.03400    0
        2021       0.02104    0

[1076 rows x 2 columns]
>>> tyr.groupby(by=['Muncode','City','year']).sum('mcl')
                              Lead in mg/L  mcl
Muncode City            year                   
 2004   ELIZABETH CITY  2003       0.00500    0
                        2005       0.00500    0
                        2006       0.00500    0
                        2008       0.00500    0
                        2009       0.00300    0
...                                    ...  ...
HILLS   PARSIPPANY TROY 2017       0.04000    0
                        2018       0.01680    0
                        2019       0.01600    0
                        2020       0.03400    0
                        2021       0.02104    0

[1076 rows x 2 columns]
>>> tyr.groupby(by=['Muncode','City','year']).sum('mcl').reset_index()
     Muncode             City  year  Lead in mg/L  mcl
0       2004   ELIZABETH CITY  2003       0.00500    0
1       2004   ELIZABETH CITY  2005       0.00500    0
2       2004   ELIZABETH CITY  2006       0.00500    0
3       2004   ELIZABETH CITY  2008       0.00500    0
4       2004   ELIZABETH CITY  2009       0.00300    0
...      ...              ...   ...           ...  ...
1071   HILLS  PARSIPPANY TROY  2017       0.04000    0
1072   HILLS  PARSIPPANY TROY  2018       0.01680    0
1073   HILLS  PARSIPPANY TROY  2019       0.01600    0
1074   HILLS  PARSIPPANY TROY  2020       0.03400    0
1075   HILLS  PARSIPPANY TROY  2021       0.02104    0

[1076 rows x 5 columns]
>>> tyr
     Muncode             City  year  Lead in mg/L  mcl
0       2004   ELIZABETH CITY  2003       0.00500    0
1       2004   ELIZABETH CITY  2005       0.00500    0
2       2004   ELIZABETH CITY  2006       0.00500    0
3       2004   ELIZABETH CITY  2008       0.00500    0
4       2004   ELIZABETH CITY  2009       0.00300    0
...      ...              ...   ...           ...  ...
1071   HILLS  PARSIPPANY TROY  2017       0.04000    0
1072   HILLS  PARSIPPANY TROY  2018       0.01680    0
1073   HILLS  PARSIPPANY TROY  2019       0.01600    0
1074   HILLS  PARSIPPANY TROY  2020       0.03400    0
1075   HILLS  PARSIPPANY TROY  2021       0.02104    0

[1076 rows x 5 columns]
>>> tyr[tyr.year=2003
  File "<stdin>", line 1
    tyr[tyr.year=2003
                ^
SyntaxError: invalid syntax
>>> tyr[tyr.year==2003]
     Muncode                 City  year  Lead in mg/L  mcl
0       2004       ELIZABETH CITY  2003        0.0050    0
14      0201       ALLENDALE BORO  2003        0.0000    0
27      0211    ELMWOOD PARK BORO  2003        0.0000    0
56      0220  FRANKLIN LAKES BORO  2003        0.0000    0
111     0232        LYNDHURST TWP  2003        0.0108    0
142     0242         OAKLAND BORO  2003        0.0000    0
172     0248          RAMSEY BORO  2003        0.0000    0
186     0251        RIDGEWOOD TWP  2003        0.0154    0
217     0258    SADDLE RIVER BORO  2003        0.0016    0
232     0264        WALDWICK BORO  2003        0.0000    0
246     0701      BELLEVILLE TOWN  2003        0.0686    2
264     0702      BLOOMFIELD TOWN  2003        0.0168    0
292     0704     CEDAR GROVE TWP.  2003        0.0000    0
324     0706     ESSEX FELLS BORO  2003        0.0000    0
338     0707       FAIRFIELD BORO  2003        0.0120    0
353     0708      GLEN RIDGE BORO  2003        0.0000    0
369     0710      LIVINGSTON TWP.  2003        0.0000    0
383     0712        MILLBURN TWP.  2003        0.0000    0
398     0713       MONTCLAIR TOWN  2003        0.0000    0
459     0717          ORANGE CITY  2003        0.0120    0
475     0718        ROSELAND BORO  2003        0.0090    0
522     0721   WEST CALDWELL BORO  2003        0.0000    0
536     0808        HARRISON TWP.  2003        0.0000    0
551     0901         BAYONNE CITY  2003        0.0000    0
567     0905         HOBOKEN CITY  2003        0.0041    0
595     0907          KEARNY TOWN  2003        0.0340    0
664     1410    EAST HANOVER TWP.  2003        0.0053    0
690     1415        KINNELON BORO  2003        0.0000    0
723     1417         MADISON BORO  2003        0.0030    0
779     1425  MOUNTAIN LAKES BORO  2003        0.0030    0
807     1432        RANDOLPH TWP.  2003        0.0045    0
834     1434        ROCKAWAY BORO  2003        0.0000    0
877     1601    BLOOMINGDALE BORO  2003        0.0060    0
891     1603         HALEDON BORO  2003        0.0000    0
906     1604       HAWTHORNE BORO  2003        0.0080    0
920     1605    LITTLE FALLS TWP.  2003        0.0000    0
939     1609   POMPTON LAKES BORO  2003        0.0000    0
953     1611        RINGWOOD BORO  2003        0.0000    0
969     1612          TOTOWA BORO  2003        0.0000    0
983     1613         WANAQUE BORO  2003        0.0000    0
996     1614           WAYNE TWP.  2003        0.0088    0
1010    1616   WOODLAND PARK BORO  2003        0.0000    0
1026    1911       HARDYSTON TWP.  2003        0.0020    0
1045    1918          SPARTA TWP.  2003        0.0045    0
>>> tyr[tyr.year==2002]
     Muncode                  City  year  Lead in mg/L  mcl
40      0217        FAIR LAWN BORO  2002        0.0060    0
71      0221         GARFIELD CITY  2002        0.0040    0
84      0223       HACKENSACK CITY  2002        0.0077    0
98      0231             LODI BORO  2002        0.0000    0
110     0232         LYNDHURST TWP  2002        0.0564    2
157     0247       PARK RIDGE BORO  2002        0.0000    0
171     0248           RAMSEY BORO  2002        0.0000    0
199     0257      SADDLE BROOK TWP  2002        0.0000    0
216     0258     SADDLE RIVER BORO  2002        0.0000    0
263     0702       BLOOMFIELD TOWN  2002        0.0000    0
279     0703         CALDWELL BORO  2002        0.0010    0
309     0705      EAST ORANGE CITY  2002        0.0100    0
337     0707        FAIRFIELD BORO  2002        0.0000    0
413     0714                NEWARK  2002        0.0083    0
427     0715   NORTH CALDWELL BORO  2002        0.0030    0
444     0716           NUTLEY TOWN  2002        0.0020    0
490     0719  SOUTH ORANGE VILLAGE  2002        0.0000    0
550     0901          BAYONNE CITY  2002        0.0000    0
581     0906           JERSEY CITY  2002        0.0011    0
622     1404          CHATHAM BORO  2002        0.0020    0
706     1416     LINCOLN PARK BORO  2002        0.0000    0
737     1420        MINE HILL TWP.  2002        0.0020    0
751     1421        MONTVILLE TWP.  2002        0.0000    0
792     1426  MOUNT ARLINGTON BORO  2002        0.0000    0
806     1432         RANDOLPH TWP.  2002        0.0048    0
848     1435         ROCKAWAY TWP.  2002        0.0060    0
864     1436          ROXBURY TWP.  2002        0.0061    0
1025    1911        HARDYSTON TWP.  2002        0.0010    0
>>> tyr[tyr.year==2004]
     Muncode                  City  year  Lead in mg/L  mcl
15      0201        ALLENDALE BORO  2004        0.0083    0
28      0211     ELMWOOD PARK BORO  2004        0.0080    0
41      0217        FAIR LAWN BORO  2004        0.0060    0
72      0221         GARFIELD CITY  2004        0.0040    0
85      0223       HACKENSACK CITY  2004        0.0077    0
112     0232         LYNDHURST TWP  2004        0.0040    0
126     0233            MAHWAH TWP  2004        0.0300    0
143     0242          OAKLAND BORO  2004        0.0063    0
158     0247       PARK RIDGE BORO  2004        0.0000    0
187     0251         RIDGEWOOD TWP  2004        0.0108    0
200     0257      SADDLE BROOK TWP  2004        0.0000    0
218     0258     SADDLE RIVER BORO  2004        0.0000    0
247     0701       BELLEVILLE TOWN  2004        0.0550    2
265     0702       BLOOMFIELD TOWN  2004        0.0120    0
280     0703         CALDWELL BORO  2004        0.0010    0
293     0704      CEDAR GROVE TWP.  2004        0.0048    0
310     0705      EAST ORANGE CITY  2004        0.0100    0
325     0706      ESSEX FELLS BORO  2004        0.0020    0
339     0707        FAIRFIELD BORO  2004        0.0000    0
354     0708       GLEN RIDGE BORO  2004        0.0536    2
399     0713        MONTCLAIR TOWN  2004        0.0000    0
414     0714                NEWARK  2004        0.0083    0
428     0715   NORTH CALDWELL BORO  2004        0.0030    0
445     0716           NUTLEY TOWN  2004        0.0020    0
460     0717           ORANGE CITY  2004        0.0000    0
491     0719  SOUTH ORANGE VILLAGE  2004        0.0000    0
505     0720           VERONA BORO  2004        0.0000    0
523     0721    WEST CALDWELL BORO  2004        0.0052    0
537     0808         HARRISON TWP.  2004        0.0000    0
552     0901          BAYONNE CITY  2004        0.0150    0
568     0905          HOBOKEN CITY  2004        0.0126    0
582     0906           JERSEY CITY  2004        0.0011    0
596     0907           KEARNY TOWN  2004        0.0200    0
609     1401          BOONTON TOWN  2004        0.0120    0
623     1404          CHATHAM BORO  2004        0.0020    0
636     1408         DENVILLE TWP.  2004        0.0280    0
652     1409            DOVER TOWN  2004        0.0049    0
678     1411     FLORHAM PARK BORO  2004        0.0000    0
707     1416     LINCOLN PARK BORO  2004        0.0200    0
738     1420        MINE HILL TWP.  2004        0.0080    0
752     1421        MONTVILLE TWP.  2004        0.0000    0
767     1422           MORRIS TWP.  2004        0.0136    0
793     1426  MOUNT ARLINGTON BORO  2004        0.0000    0
808     1432         RANDOLPH TWP.  2004        0.0048    0
822     1433        RIVERDALE BORO  2004        0.0021    0
849     1435         ROCKAWAY TWP.  2004        0.0060    0
865     1436          ROXBURY TWP.  2004        0.0061    0
892     1603          HALEDON BORO  2004        0.0060    0
921     1605     LITTLE FALLS TWP.  2004        0.0266    0
970     1612           TOTOWA BORO  2004        0.0000    0
984     1613          WANAQUE BORO  2004        0.0000    0
997     1614            WAYNE TWP.  2004        0.0080    0
1011    1616    WOODLAND PARK BORO  2004        0.0000    0
1027    1911        HARDYSTON TWP.  2004        0.0010    0
1061   HILLS       PARSIPPANY TROY  2004        0.0000    0
>>> tyr[tyr.year==2019]
     Muncode                 City  year  Lead in mg/L  mcl
10      2004       ELIZABETH CITY  2019       0.00400    0
25      0201       ALLENDALE BORO  2019       0.01000    0
38      0211    ELMWOOD PARK BORO  2019       0.00000    0
53      0217       FAIR LAWN BORO  2019       0.00620    0
68      0220  FRANKLIN LAKES BORO  2019       0.04600    0
...      ...                  ...   ...           ...  ...
1007    1614           WAYNE TWP.  2019       0.00820    0
1023    1616   WOODLAND PARK BORO  2019       0.00000    0
1042    1911       HARDYSTON TWP.  2019       0.00112    0
1058    1918          SPARTA TWP.  2019       0.00400    0
1073   HILLS      PARSIPPANY TROY  2019       0.01600    0

[64 rows x 5 columns]
>>> tyr[tyr.year==2019][0:50]
    Muncode                  City  year  Lead in mg/L  mcl
10     2004        ELIZABETH CITY  2019       0.00400    0
25     0201        ALLENDALE BORO  2019       0.01000    0
38     0211     ELMWOOD PARK BORO  2019       0.00000    0
53     0217        FAIR LAWN BORO  2019       0.00620    0
68     0220   FRANKLIN LAKES BORO  2019       0.04600    0
82     0221         GARFIELD CITY  2019       0.00330    0
95     0223       HACKENSACK CITY  2019       0.05340    2
108    0231             LODI BORO  2019       0.00100    0
123    0232         LYNDHURST TWP  2019       0.00314    0
139    0233            MAHWAH TWP  2019       0.00343    0
154    0242          OAKLAND BORO  2019       0.00246    0
168    0247       PARK RIDGE BORO  2019       0.00227    0
184    0248           RAMSEY BORO  2019       0.00000    0
196    0251         RIDGEWOOD TWP  2019       0.00384    0
213    0257      SADDLE BROOK TWP  2019       0.01114    0
229    0258     SADDLE RIVER BORO  2019       0.00000    0
244    0264         WALDWICK BORO  2019       0.00305    0
260    0701       BELLEVILLE TOWN  2019       0.07600    4
276    0702       BLOOMFIELD TOWN  2019       0.06000    2
290    0703         CALDWELL BORO  2019       0.00139    0
306    0704      CEDAR GROVE TWP.  2019       0.00000    0
320    0705      EAST ORANGE CITY  2019       0.00506    0
335    0706      ESSEX FELLS BORO  2019       0.00116    0
351    0707        FAIRFIELD BORO  2019       0.00103    0
366    0708       GLEN RIDGE BORO  2019       0.00208    0
381    0710       LIVINGSTON TWP.  2019       0.00490    0
395    0712         MILLBURN TWP.  2019       0.00400    0
410    0713        MONTCLAIR TOWN  2019       0.00324    0
424    0714                NEWARK  2019       0.17600    4
456    0716           NUTLEY TOWN  2019       0.00182    0
472    0717           ORANGE CITY  2019       0.01046    0
502    0719  SOUTH ORANGE VILLAGE  2019       0.00200    0
518    0720           VERONA BORO  2019       0.00000    0
533    0721    WEST CALDWELL BORO  2019       0.00077    0
547    0808         HARRISON TWP.  2019       0.00400    0
563    0901          BAYONNE CITY  2019       0.01216    0
578    0905          HOBOKEN CITY  2019       0.00956    0
592    0906           JERSEY CITY  2019       0.00826    0
607    0907           KEARNY TOWN  2019       0.00393    0
619    1401          BOONTON TOWN  2019       0.01100    0
634    1404          CHATHAM BORO  2019       0.00181    0
662    1409            DOVER TOWN  2019       0.00460    0
688    1411     FLORHAM PARK BORO  2019       0.00324    0
703    1415         KINNELON BORO  2019       0.00000    0
719    1416     LINCOLN PARK BORO  2019       0.07150    2
735    1417          MADISON BORO  2019       0.00423    0
749    1420        MINE HILL TWP.  2019       0.00584    0
776    1422           MORRIS TWP.  2019       0.00480    0
789    1425   MOUNTAIN LAKES BORO  2019       0.00200    0
832    1433        RIVERDALE BORO  2019       0.00168    0
>>> tyr['mcl_bool'] = tyr[tyr.mcl > 0]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'mcl_bool'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3751, in _set_item_mgr
    loc = self._info_axis.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'mcl_bool'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3602, in __setitem__
    self._set_item_frame_value(key, value)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3742, in _set_item_frame_value
    self._set_item_mgr(key, arraylike)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3754, in _set_item_mgr
    self._mgr.insert(len(self._info_axis), key, value)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/managers.py", line 1162, in insert
    block = new_block(values=value, ndim=self.ndim, placement=slice(loc, loc + 1))
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py", line 1937, in new_block
    check_ndim(values, placement, ndim)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py", line 1979, in check_ndim
    raise ValueError(
ValueError: Wrong number of items passed 5, placement implies 1
>>> tyr['mcl_bool'] = tyr[tyr['mcl'] > 0]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'mcl_bool'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3751, in _set_item_mgr
    loc = self._info_axis.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'mcl_bool'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3602, in __setitem__
    self._set_item_frame_value(key, value)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3742, in _set_item_frame_value
    self._set_item_mgr(key, arraylike)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3754, in _set_item_mgr
    self._mgr.insert(len(self._info_axis), key, value)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/managers.py", line 1162, in insert
    block = new_block(values=value, ndim=self.ndim, placement=slice(loc, loc + 1))
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py", line 1937, in new_block
    check_ndim(values, placement, ndim)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py", line 1979, in check_ndim
    raise ValueError(
ValueError: Wrong number of items passed 5, placement implies 1
>>> tyr['mcl_bool'] = tyr['mcl'] > 0
>>> tyr
     Muncode             City  year  Lead in mg/L  mcl  mcl_bool
0       2004   ELIZABETH CITY  2003       0.00500    0     False
1       2004   ELIZABETH CITY  2005       0.00500    0     False
2       2004   ELIZABETH CITY  2006       0.00500    0     False
3       2004   ELIZABETH CITY  2008       0.00500    0     False
4       2004   ELIZABETH CITY  2009       0.00300    0     False
...      ...              ...   ...           ...  ...       ...
1071   HILLS  PARSIPPANY TROY  2017       0.04000    0     False
1072   HILLS  PARSIPPANY TROY  2018       0.01680    0     False
1073   HILLS  PARSIPPANY TROY  2019       0.01600    0     False
1074   HILLS  PARSIPPANY TROY  2020       0.03400    0     False
1075   HILLS  PARSIPPANY TROY  2021       0.02104    0     False

[1076 rows x 6 columns]
>>> tyr[tyr.year==2019]
     Muncode                 City  year  Lead in mg/L  mcl  mcl_bool
10      2004       ELIZABETH CITY  2019       0.00400    0     False
25      0201       ALLENDALE BORO  2019       0.01000    0     False
38      0211    ELMWOOD PARK BORO  2019       0.00000    0     False
53      0217       FAIR LAWN BORO  2019       0.00620    0     False
68      0220  FRANKLIN LAKES BORO  2019       0.04600    0     False
...      ...                  ...   ...           ...  ...       ...
1007    1614           WAYNE TWP.  2019       0.00820    0     False
1023    1616   WOODLAND PARK BORO  2019       0.00000    0     False
1042    1911       HARDYSTON TWP.  2019       0.00112    0     False
1058    1918          SPARTA TWP.  2019       0.00400    0     False
1073   HILLS      PARSIPPANY TROY  2019       0.01600    0     False

[64 rows x 6 columns]
>>> tyr[tyr.year==2002]
     Muncode                  City  year  Lead in mg/L  mcl  mcl_bool
40      0217        FAIR LAWN BORO  2002        0.0060    0     False
71      0221         GARFIELD CITY  2002        0.0040    0     False
84      0223       HACKENSACK CITY  2002        0.0077    0     False
98      0231             LODI BORO  2002        0.0000    0     False
110     0232         LYNDHURST TWP  2002        0.0564    2      True
157     0247       PARK RIDGE BORO  2002        0.0000    0     False
171     0248           RAMSEY BORO  2002        0.0000    0     False
199     0257      SADDLE BROOK TWP  2002        0.0000    0     False
216     0258     SADDLE RIVER BORO  2002        0.0000    0     False
263     0702       BLOOMFIELD TOWN  2002        0.0000    0     False
279     0703         CALDWELL BORO  2002        0.0010    0     False
309     0705      EAST ORANGE CITY  2002        0.0100    0     False
337     0707        FAIRFIELD BORO  2002        0.0000    0     False
413     0714                NEWARK  2002        0.0083    0     False
427     0715   NORTH CALDWELL BORO  2002        0.0030    0     False
444     0716           NUTLEY TOWN  2002        0.0020    0     False
490     0719  SOUTH ORANGE VILLAGE  2002        0.0000    0     False
550     0901          BAYONNE CITY  2002        0.0000    0     False
581     0906           JERSEY CITY  2002        0.0011    0     False
622     1404          CHATHAM BORO  2002        0.0020    0     False
706     1416     LINCOLN PARK BORO  2002        0.0000    0     False
737     1420        MINE HILL TWP.  2002        0.0020    0     False
751     1421        MONTVILLE TWP.  2002        0.0000    0     False
792     1426  MOUNT ARLINGTON BORO  2002        0.0000    0     False
806     1432         RANDOLPH TWP.  2002        0.0048    0     False
848     1435         ROCKAWAY TWP.  2002        0.0060    0     False
864     1436          ROXBURY TWP.  2002        0.0061    0     False
1025    1911        HARDYSTON TWP.  2002        0.0010    0     False
>>> tyr.columns
Index(['Muncode', 'City', 'year', 'Lead in mg/L', 'mcl', 'mcl_bool'], dtype='object')
>>> type(tyr)
<class 'pandas.core.frame.DataFrame'>
>>> type(tyr)
<class 'pandas.core.frame.DataFrame'>
>>> tyr.City
0        ELIZABETH CITY
1        ELIZABETH CITY
2        ELIZABETH CITY
3        ELIZABETH CITY
4        ELIZABETH CITY
             ...       
1071    PARSIPPANY TROY
1072    PARSIPPANY TROY
1073    PARSIPPANY TROY
1074    PARSIPPANY TROY
1075    PARSIPPANY TROY
Name: City, Length: 1076, dtype: object
>>> for n in tyr.City:
...     print(n)
... 
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ELIZABETH CITY
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ALLENDALE BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
ELMWOOD PARK BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FAIR LAWN BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
FRANKLIN LAKES BORO
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
GARFIELD CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
HACKENSACK CITY
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LODI BORO
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
LYNDHURST TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
MAHWAH TWP
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
OAKLAND BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
PARK RIDGE BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RAMSEY BORO
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
RIDGEWOOD TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE BROOK TWP
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
SADDLE RIVER BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
WALDWICK BORO
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BELLEVILLE TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
BLOOMFIELD TOWN
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CALDWELL BORO
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
CEDAR GROVE TWP.
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
EAST ORANGE CITY
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
ESSEX FELLS BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
FAIRFIELD BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
GLEN RIDGE BORO
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
LIVINGSTON TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MILLBURN TWP.
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
MONTCLAIR TOWN
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NEWARK
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NORTH CALDWELL BORO
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
NUTLEY TOWN
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ORANGE CITY
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
ROSELAND BORO
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
SOUTH ORANGE VILLAGE
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
VERONA BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
WEST CALDWELL BORO
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
HARRISON TWP.
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
BAYONNE CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
HOBOKEN CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
JERSEY CITY
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
KEARNY TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
BOONTON TOWN
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
CHATHAM BORO
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DENVILLE TWP.
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
DOVER TOWN
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
EAST HANOVER TWP.
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
FLORHAM PARK BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
KINNELON BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
LINCOLN PARK BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MADISON BORO
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MINE HILL TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MONTVILLE TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MORRIS TWP.
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNTAIN LAKES BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
MOUNT ARLINGTON BORO
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RANDOLPH TWP.
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
RIVERDALE BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY BORO
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROCKAWAY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
ROXBURY TWP.
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
BLOOMINGDALE BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HALEDON BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
HAWTHORNE BORO
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
LITTLE FALLS TWP.
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
POMPTON LAKES BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
RINGWOOD BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
TOTOWA BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WANAQUE BORO
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WAYNE TWP.
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
WOODLAND PARK BORO
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
HARDYSTON TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
SPARTA TWP.
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
PARSIPPANY TROY
>>> nj_w_lead = pd.merge(nj_muni, tyr, how="inner", left_on='MUN_CODE', right_on='Muncode')
>>> nj_w_lead.columns
Index(['MUN', 'COUNTY', 'MUN_LABEL', 'MUN_TYPE', 'NAME', 'GNIS_NAME', 'GNIS',
       'SSN', 'MUN_CODE', 'KEY', 'CENSUS2010', 'ACRES', 'SQ_MILES', 'POP2010',
       'POP2000', 'POP1990', 'POP1980', 'POPDEN2010', 'POPDEN2000',
       'POPDEN1990', 'POPDEN1980', 'SHAPE_AREA', 'SHAPE_LEN', 'geometry',
       'Muncode', 'City', 'year', 'Lead in mg/L', 'mcl', 'mcl_bool'],
      dtype='object')
>>> nj_w_lead.geometry
0       POLYGON ((287180.830 337619.512, 292691.762 33...
1       POLYGON ((287180.830 337619.512, 292691.762 33...
2       POLYGON ((287180.830 337619.512, 292691.762 33...
3       POLYGON ((287180.830 337619.512, 292691.762 33...
4       POLYGON ((287180.830 337619.512, 292691.762 33...
                              ...                        
1043    POLYGON ((575934.106 738134.622, 575918.178 73...
1044    POLYGON ((575934.106 738134.622, 575918.178 73...
1045    POLYGON ((575934.106 738134.622, 575918.178 73...
1046    POLYGON ((575934.106 738134.622, 575918.178 73...
1047    POLYGON ((575934.106 738134.622, 575918.178 73...
Name: geometry, Length: 1048, dtype: geometry
>>> nj_w_lead.plot()
<AxesSubplot:>
>>> plot.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'plot' is not defined
>>> from matplotlib import pyplot
>>> pyplot.show()
nj_muni.plot()
pyplot.show()
>>> nj_muni.plot()
<AxesSubplot:>
>>> pyplot.show()
>>> nj_with_lead
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'nj_with_lead' is not defined
>>> nj_w_lead
                MUN      COUNTY           MUN_LABEL  MUN_TYPE                NAME              GNIS_NAME  ... Muncode            City  year Lead in mg/L mcl  mcl_bool
0      HARRISON TWP  GLOUCESTER   Harrison Township  Township   Harrison Township   Township of Harrison  ...    0808   HARRISON TWP.  2001      0.00000   0     False
1      HARRISON TWP  GLOUCESTER   Harrison Township  Township   Harrison Township   Township of Harrison  ...    0808   HARRISON TWP.  2003      0.00000   0     False
2      HARRISON TWP  GLOUCESTER   Harrison Township  Township   Harrison Township   Township of Harrison  ...    0808   HARRISON TWP.  2004      0.00000   0     False
3      HARRISON TWP  GLOUCESTER   Harrison Township  Township   Harrison Township   Township of Harrison  ...    0808   HARRISON TWP.  2006      0.00000   0     False
4      HARRISON TWP  GLOUCESTER   Harrison Township  Township   Harrison Township   Township of Harrison  ...    0808   HARRISON TWP.  2007      0.00700   0     False
...             ...         ...                 ...       ...                 ...                    ...  ...     ...             ...   ...          ...  ..       ...
1043  MONTCLAIR TWP       ESSEX  Montclair Township  Township  Montclair Township  Township of Montclair  ...    0713  MONTCLAIR TOWN  2016      0.00000   0     False
1044  MONTCLAIR TWP       ESSEX  Montclair Township  Township  Montclair Township  Township of Montclair  ...    0713  MONTCLAIR TOWN  2018      0.00390   0     False
1045  MONTCLAIR TWP       ESSEX  Montclair Township  Township  Montclair Township  Township of Montclair  ...    0713  MONTCLAIR TOWN  2019      0.00324   0     False
1046  MONTCLAIR TWP       ESSEX  Montclair Township  Township  Montclair Township  Township of Montclair  ...    0713  MONTCLAIR TOWN  2020      0.00000   0     False
1047  MONTCLAIR TWP       ESSEX  Montclair Township  Township  Montclair Township  Township of Montclair  ...    0713  MONTCLAIR TOWN  2021      0.00000   0     False

[1048 rows x 30 columns]
>>> tyr[tyr.Muncode == 
... '0808']
    Muncode           City  year  Lead in mg/L  mcl  mcl_bool
535    0808  HARRISON TWP.  2001         0.000    0     False
536    0808  HARRISON TWP.  2003         0.000    0     False
537    0808  HARRISON TWP.  2004         0.000    0     False
538    0808  HARRISON TWP.  2006         0.000    0     False
539    0808  HARRISON TWP.  2007         0.007    0     False
540    0808  HARRISON TWP.  2009         0.007    0     False
541    0808  HARRISON TWP.  2010         0.002    0     False
542    0808  HARRISON TWP.  2012         0.002    0     False
543    0808  HARRISON TWP.  2013         0.001    0     False
544    0808  HARRISON TWP.  2015         0.001    0     False
545    0808  HARRISON TWP.  2016         0.001    0     False
546    0808  HARRISON TWP.  2018         0.001    0     False
547    0808  HARRISON TWP.  2019         0.004    0     False
548    0808  HARRISON TWP.  2020         0.002    0     False
549    0808  HARRISON TWP.  2021         0.004    0     False
>>> %                                                                                                                                                                                    (geo_env) Oakafee@Jesses-MacBook-Air project % range(2002:2021)
zsh: unknown file attribute: 2
(geo_env) Oakafee@Jesses-MacBook-Air project % python3         
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> range(2002:2021)
  File "<stdin>", line 1
    range(2002:2021)
              ^
SyntaxError: invalid syntax
>>> range(2002,2021)
range(2002, 2021)
>>> for i in range(2002,2021)
  File "<stdin>", line 1
    for i in range(2002,2021)
                            ^
SyntaxError: invalid syntax
>>> for i in range(2002,2021):
...   print(i)
... 
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
>>> tyr[tyr.City = 'NEWARK']
  File "<stdin>", line 1
    tyr[tyr.City = 'NEWARK']
                 ^
SyntaxError: invalid syntax
>>> tyr[tyr.City == 'NEWARK']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tyr' is not defined
>>> tyr
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tyr' is not defined
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info[lead_info.City=='NEWARK']
       City County  Lead in mg/L Muncode      PWSID        Water system name       date
904  NEWARK  ESSEX        0.0083    0714  NJ0714001  NEWARK WATER DEPARTMENT 2002-01-01
905  NEWARK  ESSEX        0.0083    0714  NJ0714001  NEWARK WATER DEPARTMENT 2004-12-31
906  NEWARK  ESSEX        0.0079    0714  NJ0714001  NEWARK WATER DEPARTMENT 2005-01-01
907  NEWARK  ESSEX        0.0110    0714  NJ0714001  NEWARK WATER DEPARTMENT 2007-01-01
908  NEWARK  ESSEX        0.0079    0714  NJ0714001  NEWARK WATER DEPARTMENT 2007-12-31
909  NEWARK  ESSEX        0.0110    0714  NJ0714001  NEWARK WATER DEPARTMENT 2009-12-31
910  NEWARK  ESSEX        0.0090    0714  NJ0714001  NEWARK WATER DEPARTMENT 2010-01-01
911  NEWARK  ESSEX        0.0090    0714  NJ0714001  NEWARK WATER DEPARTMENT 2012-12-31
912  NEWARK  ESSEX        0.0100    0714  NJ0714001  NEWARK WATER DEPARTMENT 2013-01-01
913  NEWARK  ESSEX        0.0100    0714  NJ0714001  NEWARK WATER DEPARTMENT 2015-12-31
914  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-01-01
915  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-06-30
916  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-07-01
917  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-12-31
918  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-01-01
919  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-06-30
920  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-07-01
921  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-12-31
922  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-01-01
923  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-06-30
924  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-07-01
925  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-12-31
926  NEWARK  ESSEX        0.0139    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-01-01
927  NEWARK  ESSEX        0.0139    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-06-30
928  NEWARK  ESSEX        0.0130    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-07-01
929  NEWARK  ESSEX        0.0130    0714  NJ0714001  NEWARK WATER DEPARTMENT 2020-12-31
930  NEWARK  ESSEX        0.0066    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-01-01
931  NEWARK  ESSEX        0.0066    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-06-30
932  NEWARK  ESSEX           NaN    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-07-01
933  NEWARK  ESSEX           NaN    0714  NJ0714001  NEWARK WATER DEPARTMENT 2021-12-31
>>> lead_info[lead_info.City=='NEWARK'][lead_info['Lead in mg/L' > 0.015]]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: '>' not supported between instances of 'str' and 'float'
>>> lead_info[lead_info.City=='NEWARK'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
       City County  Lead in mg/L Muncode      PWSID        Water system name       date
914  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-01-01
915  NEWARK  ESSEX        0.0270    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-06-30
916  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-07-01
917  NEWARK  ESSEX        0.0267    0714  NJ0714001  NEWARK WATER DEPARTMENT 2017-12-31
918  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-01-01
919  NEWARK  ESSEX        0.0178    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-06-30
920  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-07-01
921  NEWARK  ESSEX        0.0479    0714  NJ0714001  NEWARK WATER DEPARTMENT 2018-12-31
922  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-01-01
923  NEWARK  ESSEX        0.0570    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-06-30
924  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-07-01
925  NEWARK  ESSEX        0.0310    0714  NJ0714001  NEWARK WATER DEPARTMENT 2019-12-31
>>> lead_info.iloc[914]
City                                  NEWARK
County                                 ESSEX
Lead in mg/L                           0.027
Muncode                                 0714
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
date                     2017-01-01 00:00:00
Name: 914, dtype: object
>>> lead_info.iloc[914].date
Timestamp('2017-01-01 00:00:00')
>>> lead_info.iloc[915].date - lead_info.iloc[914].date
Timedelta('180 days 00:00:00')
>>> (lead_info.iloc[915].date - lead_info.iloc[914].date) + (lead_info.iloc[917] - lead_info.iloc[916].date)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/ops/common.py", line 69, in new_method
    return method(self, other)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/arraylike.py", line 100, in __sub__
    return self._arith_method(other, operator.sub)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/series.py", line 5526, in _arith_method
    result = ops.arithmetic_op(lvalues, rvalues, op)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/ops/array_ops.py", line 218, in arithmetic_op
    res_values = op(left, right)
TypeError: unsupported operand type(s) for -: 'numpy.ndarray' and 'Timestamp'
>>> (lead_info.iloc[915].date - lead_info.iloc[914].date) + (lead_info.iloc[917].date - lead_info.iloc[916].date)
Timedelta('363 days 00:00:00')
>>> lead_info[lead_info.City=='MAHWAH'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
Empty DataFrame
Columns: [City, County, Lead in mg/L, Muncode, PWSID, Water system name, date]
Index: []
>>> lead_info[lead_info.City=='MAHWAH TWP'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
            City  County  Lead in mg/L Muncode      PWSID        Water system name       date
1552  MAHWAH TWP  BERGEN        0.0405    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2005-01-01
1553  MAHWAH TWP  BERGEN        0.0405    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2005-12-31
1556  MAHWAH TWP  BERGEN        0.0230    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-07-01
1557  MAHWAH TWP  BERGEN        0.0230    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2006-12-31
1562  MAHWAH TWP  BERGEN        0.0160    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-01-01
1563  MAHWAH TWP  BERGEN        0.0160    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-06-30
1564  MAHWAH TWP  BERGEN        0.0190    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-07-01
1565  MAHWAH TWP  BERGEN        0.0190    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2008-12-31
1566  MAHWAH TWP  BERGEN        0.0300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-01-01
1567  MAHWAH TWP  BERGEN        0.0300    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-06-30
1568  MAHWAH TWP  BERGEN        0.0270    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-07-01
1569  MAHWAH TWP  BERGEN        0.0270    0233  NJ0233001  MAHWAH WATER DEPARTMENT 2009-12-31
>>> quit()
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one_2.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info[lead_info.City=='MAHWAH TWP'][lead_info['Lead in mg/L'] > 0.015]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/generic.py", line 5487, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'City'
>>> lead_info
   Start dates  End dates  Lead in mg/L     PWSID:        Water System Name:          Principal County & City:
0   2020-01-01 2022-12-31           NaN  NJ1425001  MOUNTAIN LAKES WATER DEP  MORRIS, MOUNTAIN LAKES BORO-1425
1   2017-01-01 2019-12-31       0.00200  NJ1425001  MOUNTAIN LAKES WATER DEP  MORRIS, MOUNTAIN LAKES BORO-1425
2   2014-01-01 2016-12-31       0.00400  NJ1425001  MOUNTAIN LAKES WATER DEP  MORRIS, MOUNTAIN LAKES BORO-1425
3   2011-01-01 2013-12-31       0.00900  NJ1425001  MOUNTAIN LAKES WATER DEP  MORRIS, MOUNTAIN LAKES BORO-1425
4   2008-01-01 2010-12-31       0.00800  NJ1425001  MOUNTAIN LAKES WATER DEP  MORRIS, MOUNTAIN LAKES BORO-1425
..         ...        ...           ...        ...                       ...                               ...
1   2016-01-01 2018-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    MORRIS, FLORHAM PARK BORO-1411
2   2013-01-01 2015-12-31       0.00245  NJ1411001   FLORHAM PARK WATER DEPT    MORRIS, FLORHAM PARK BORO-1411
3   2010-01-01 2012-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    MORRIS, FLORHAM PARK BORO-1411
4   2007-01-01 2009-12-31       0.00200  NJ1411001   FLORHAM PARK WATER DEPT    MORRIS, FLORHAM PARK BORO-1411
5   2004-01-01 2006-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    MORRIS, FLORHAM PARK BORO-1411

[837 rows x 6 columns]
>>> quit()
(geo_env) Oakafee@Jesses-MacBook-Air project % NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one.pkl'

nj_muni = gpd.read_file(NJ_MUNI)
lead_info = pd.read_pickle(PICKLE_PATH
> 
> 
> 
> 
> 
> sdfa
> quit()
function> dsf
zsh: command not found: NJ_MUNI
zsh: command not found: PICKLE_PATH
zsh: unknown file attribute: J
zsh: bad pattern: pd.read_pickle(PICKLE_PATH\n\n\n\n\n\nsdfa\nquit
(geo_env) Oakafee@Jesses-MacBook-Air project % 
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'gpd' is not defined
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info
                     City  County  Lead in mg/L Muncode      PWSID         Water system name       date
0     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2003-01-01
1     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2005-12-31
2     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2006-01-01
3     MOUNTAIN LAKES BORO  MORRIS       0.00800    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-01-01
4     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-12-31
...                   ...     ...           ...     ...        ...                       ...        ...
1733    FLORHAM PARK BORO  MORRIS       0.00245    1411  NJ1411001   FLORHAM PARK WATER DEPT 2015-12-31
1734    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2016-01-01
1735    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2018-12-31
1736    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2019-01-01
1737    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2021-12-31

[1738 rows x 7 columns]
>>> quit()
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one_3.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info
                     City  County  Lead in mg/L Muncode      PWSID         Water system name       date
0     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2003-01-01
1     MOUNTAIN LAKES BORO  MORRIS       0.00300    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2005-12-31
2     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2006-01-01
3     MOUNTAIN LAKES BORO  MORRIS       0.00800    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-01-01
4     MOUNTAIN LAKES BORO  MORRIS       0.00600    1425  NJ1425001  MOUNTAIN LAKES WATER DEP 2008-12-31
...                   ...     ...           ...     ...        ...                       ...        ...
1733    FLORHAM PARK BORO  MORRIS       0.00245    1411  NJ1411001   FLORHAM PARK WATER DEPT 2015-12-31
1734    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2016-01-01
1735    FLORHAM PARK BORO  MORRIS       0.00000    1411  NJ1411001   FLORHAM PARK WATER DEPT 2018-12-31
1736    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2019-01-01
1737    FLORHAM PARK BORO  MORRIS       0.00324    1411  NJ1411001   FLORHAM PARK WATER DEPT 2021-12-31

[1738 rows x 7 columns]
>>> quit()
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one_3.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info
    Start dates  End dates  Lead in mg/L      PWSID         Water system name                 City  County Muncode
0    2003-01-01 2005-12-31       0.00300  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
1    2006-01-01 2008-12-31       0.00600  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
2    2008-01-01 2010-12-31       0.00800  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
3    2011-01-01 2013-12-31       0.00900  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
4    2014-01-01 2016-12-31       0.00400  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
..          ...        ...           ...        ...                       ...                  ...     ...     ...
864  2007-01-01 2009-12-31       0.00200  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
865  2010-01-01 2012-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
866  2013-01-01 2015-12-31       0.00245  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
867  2016-01-01 2018-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
868  2019-01-01 2021-12-31       0.00324  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411

[869 rows x 8 columns]
>>> lead_info[lead_info.City=='Newark'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
Empty DataFrame
Columns: [Start dates, End dates, Lead in mg/L, PWSID, Water system name, City, County, Muncode]
Index: []
>>> lead_info[lead_info.City=='NEWARK'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
    Start dates  End dates  Lead in mg/L      PWSID        Water system name    City County Muncode
457  2017-01-01 2017-06-30        0.0270  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
458  2017-07-01 2017-12-31        0.0267  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
459  2018-01-01 2018-06-30        0.0178  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
460  2018-07-01 2018-12-31        0.0479  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
461  2019-01-01 2019-06-30        0.0570  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
462  2019-07-01 2019-12-31        0.0310  NJ0714001  NEWARK WATER DEPARTMENT  NEWARK  ESSEX    0714
>>> ewr = lead_info[lead_info.City=='Newark'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
>>> for n in ewr:
... 
  File "<stdin>", line 2
    
    ^
IndentationError: expected an indented block
>>> 
>>> time = 0
>>> for n in ewr:
...   time += (n['End dates'] - n['Start dates'])
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: string indices must be integers
>>> ewr
Empty DataFrame
Columns: [Start dates, End dates, Lead in mg/L, PWSID, Water system name, City, County, Muncode]
Index: []
>>> ewr = lead_info[lead_info.City=='NEWARK'][lead_info['Lead in mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
>>> time = 0
>>> for n in ewr:
...   time += (n['End dates'] - n['Start dates'])
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: string indices must be integers
>>> time
0
>>> for n in ewr:
...   print(n)
... 
Start dates
End dates
Lead in mg/L
PWSID
Water system name
City
County
Muncode
>>> ewr.iterrows()
<generator object DataFrame.iterrows at 0x7fa8966bf890>
>>> for n in ewr.iterrows():
...   print(n)
... 
(457, Start dates              2017-01-01 00:00:00
End dates                2017-06-30 00:00:00
Lead in mg/L                           0.027
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 457, dtype: object)
(458, Start dates              2017-07-01 00:00:00
End dates                2017-12-31 00:00:00
Lead in mg/L                          0.0267
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 458, dtype: object)
(459, Start dates              2018-01-01 00:00:00
End dates                2018-06-30 00:00:00
Lead in mg/L                          0.0178
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 459, dtype: object)
(460, Start dates              2018-07-01 00:00:00
End dates                2018-12-31 00:00:00
Lead in mg/L                          0.0479
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 460, dtype: object)
(461, Start dates              2019-01-01 00:00:00
End dates                2019-06-30 00:00:00
Lead in mg/L                           0.057
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 461, dtype: object)
(462, Start dates              2019-07-01 00:00:00
End dates                2019-12-31 00:00:00
Lead in mg/L                           0.031
PWSID                              NJ0714001
Water system name    NEWARK WATER DEPARTMENT
City                                  NEWARK
County                                 ESSEX
Muncode                                 0714
Name: 462, dtype: object)
>>> for n in ewr.iterrows():
...   print(n['Start dates'])
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: tuple indices must be integers or slices, not str
>>> for n in ewr.iterrows():
...   print(n.PWSID)
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'tuple' object has no attribute 'PWSID'
>>> for n in ewr.itertuples():
...   print(n.PWSID)
... 
NJ0714001
NJ0714001
NJ0714001
NJ0714001
NJ0714001
NJ0714001
>>> for n in ewr.itertuples():
...   print(n['Start dates'])
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: tuple indices must be integers or slices, not str
>>> for n in ewr.itertuples():
...   print(n['PWSID'])
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: tuple indices must be integers or slices, not str
>>> for n in ewr.itertuples():
... 
  File "<stdin>", line 2
    
    ^
IndentationError: expected an indented block
>>> 
>>> quit()
(geo_env) Oakafee@Jesses-MacBook-Air project % python3
Python 3.8.8 (default, Apr 13 2021, 12:59:45) 
[Clang 10.0.0 ] :: Anaconda, Inc. on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import geopandas as gpd
>>> import matplotlib.pyplot as plt
>>> 
>>> NJ_MUNI = '/Users/Oakafee/Documents/cunymaps/nj-municipalities-age/Govt_admin_mun_coast_bnd/Govt_admin_mun_coast_bnd.shp'
>>> PICKLE_PATH = '/Users/Oakafee/Documents/Grad_school/gisProgramming/project/ws_data/all_lead_as_one_3.pkl'
>>> 
>>> nj_muni = gpd.read_file(NJ_MUNI)
>>> lead_info = pd.read_pickle(PICKLE_PATH)
>>> lead_info
    Start_dates  End_dates  Lead_in_mg/L      PWSID         Water_system_name                 City  County Muncode
0    2003-01-01 2005-12-31       0.00300  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
1    2006-01-01 2008-12-31       0.00600  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
2    2008-01-01 2010-12-31       0.00800  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
3    2011-01-01 2013-12-31       0.00900  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
4    2014-01-01 2016-12-31       0.00400  NJ1425001  MOUNTAIN LAKES WATER DEP  MOUNTAIN LAKES BORO  MORRIS    1425
..          ...        ...           ...        ...                       ...                  ...     ...     ...
864  2007-01-01 2009-12-31       0.00200  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
865  2010-01-01 2012-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
866  2013-01-01 2015-12-31       0.00245  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
867  2016-01-01 2018-12-31       0.00000  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411
868  2019-01-01 2021-12-31       0.00324  NJ1411001   FLORHAM PARK WATER DEPT    FLORHAM PARK BORO  MORRIS    1411

[869 rows x 8 columns]
>>> ewr = lead_info[lead_info.City=='NEWARK'][lead_info['Lead in mg/L'] > 0.015]
Traceback (most recent call last):
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3361, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 76, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 108, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'Lead in mg/L'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/frame.py", line 3458, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/Oakafee/Documents/Grad_school/gisProgramming/geo_env/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 3363, in get_loc
    raise KeyError(key) from err
KeyError: 'Lead in mg/L'
>>> ewr = lead_info[lead_info.City=='NEWARK'][lead_info['Lead_in_mg/L'] > 0.015]
<stdin>:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
>>> for n in ewr.itertuples():
...  
... 
  File "<stdin>", line 3
    
    ^
IndentationError: expected an indented block
>>> time = 0
>>> for n in ewr.itertuples():
...   time += (n.End_dates - n.Start_dates)
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: unsupported operand type(s) for +=: 'int' and 'Timedelta'
>>> for n in ewr.itertuples():
...   print(n.End_dates - n.Start_dates)
... 
180 days 00:00:00
183 days 00:00:00
180 days 00:00:00
183 days 00:00:00
180 days 00:00:00
183 days 00:00:00
>>> from datetime import timedelta
>>> time = timedelta()
>>> for n in ewr.itertuples():
...   time += (n.End_dates - n.Start_dates)
... 
>>> time
Timedelta('1089 days 00:00:00')
>>> time / 365
Timedelta('2 days 23:36:19.726027397')
>>> time.days
1089
>>> time.days / 365
2.9835616438356163
>>> 
